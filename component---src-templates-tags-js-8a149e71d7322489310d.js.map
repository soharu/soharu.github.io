{"version":3,"file":"component---src-templates-tags-js-8a149e71d7322489310d.js","mappings":"+KAMMA,EAAiBC,EAAAA,QAAAA,QAAAA,WAAH,6EAAGA,CAAH,qEASdC,EAAeD,EAAAA,QAAAA,GAAAA,WAAH,2EAAGA,CAAH,mIAYZE,EAAeF,EAAAA,QAAAA,IAAAA,WAAH,2EAAGA,CAAH,sIAWZG,EAAWH,EAAAA,QAAAA,IAAAA,WAAH,uEAAGA,CAAH,2FAORI,EAAYJ,EAAAA,QAAAA,IAAAA,WAAH,wEAAGA,CAAH,+BAKTK,EAAkB,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,MAC1BC,EAAc,GAAMF,EAC1B,OACE,gBAACP,EAAD,KACE,gBAACE,EAAD,KAAeO,GACdD,EAAME,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACNC,EAAgBC,GAAAA,CAAOF,EAAKG,YAAYC,MAC3CC,QACAC,OAFmB,iBAGtB,OACE,gBAACd,EAAD,CAAce,IAAKP,EAAKQ,IACtB,gBAACf,EAAD,KAAWQ,GACX,gBAACP,EAAD,KACE,gBAAC,EAAAe,KAAD,CAAMC,GAAIV,EAAKW,OAAOC,MAAOZ,EAAKG,YAAYP,cA2B5DD,EAAgBkB,aAAe,CAC7BjB,MAAM,GACNC,MAAO,IAGT,O,kFCvFMiB,E,KAAgBxB,QAAAA,IAAAA,WAAH,+DAAGA,CAAH,oFAkDnB,UAxCa,SAAC,GAA2B,IAAzByB,EAAwB,EAAxBA,YAAaC,EAAW,EAAXA,KACnBC,EAAQF,EAARE,IACAC,EAAUF,EAAKG,kBAAfD,MACFtB,EAAK,GAAMqB,EAEjB,OACE,gBAAC,IAAD,KACE,gBAAC,IAAD,CAAYrB,MAAOA,IACnB,gBAAC,IAAD,CAAiBA,MAAOA,EAAOC,MAAOqB,IACtC,gBAACJ,EAAD,KACE,gBAAC,EAAAL,KAAD,CAAMC,GAAG,SAAT","sources":["webpack://soharu-gatsby-blog/./src/components/post-list-section.js","webpack://soharu-gatsby-blog/./src/templates/tags.js"],"sourcesContent":["import React from \"react\"\nimport { Link } from \"gatsby\"\nimport moment from \"moment\"\nimport PropTypes from \"prop-types\"\nimport styled from \"styled-components\"\n\nconst SectionWrapper = styled.section`\n  margin: 0 0 1.5rem 0;\n  padding: 0;\n\n  &:last-child {\n    margin-bottom: 1rem;\n  }\n`\n\nconst SectionTitle = styled.h2`\n  margin-bottom: 0.5rem;\n  padding: 0 0 1rem 0;\n  border-bottom: 1px dashed #ccc;\n\n  & span {\n    font-weight: lighter;\n    color: red;\n    font-size: 0.8rem;\n  }\n`\n\nconst PostListItem = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  column-gap: 1rem;\n  row-gap: 0.2rem;\n  align-items: center;\n  margin-bottom: 0.5rem;\n  padding: 0;\n`\n\nconst PostDate = styled.div`\n  margin: 0;\n  border-radius: 0.2rem;\n  font-size: 0.8rem;\n  font-family: 'Noto Sans KR', sans-serif;\n`\n\nconst PostTitle = styled.div`\n  margin: 0;\n  min-width: 300px;\n`\n\nconst PostListSection = ({ title, posts }) => {\n  const titleWithCount = `${title}`\n  return (\n    <SectionWrapper>\n      <SectionTitle>{titleWithCount}</SectionTitle>\n      {posts.map(({ node }) => {\n        const formattedDate = moment(node.frontmatter.date)\n          .local()\n          .format(`YYYY년 MM월 DD일`)\n        return (\n          <PostListItem key={node.id}>\n            <PostDate>{formattedDate}</PostDate>\n            <PostTitle>\n              <Link to={node.fields.slug}>{node.frontmatter.title}</Link>\n            </PostTitle>\n          </PostListItem>\n        )\n      })}\n    </SectionWrapper>\n  )\n}\n\nPostListSection.propTypes = {\n  title: PropTypes.string,\n  posts: PropTypes.arrayOf(\n    PropTypes.shape({\n      node: PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        frontmatter: PropTypes.shape({\n          title: PropTypes.string.isRequired,\n          date: PropTypes.string.isRequired,\n        }),\n        fields: PropTypes.shape({\n          slug: PropTypes.string.isRequired,\n        }),\n      }),\n    }).isRequired\n  ),\n}\n\nPostListSection.defaultProps = {\n  title: ``,\n  posts: [],\n}\n\nexport default PostListSection\n","import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport Layout from \"../components/layout\"\nimport PageHelmet from \"../components/pageHelmet\"\nimport PostListSection from \"../components/post-list-section\"\nimport styled from \"styled-components\"\n\nconst SectionFooter = styled.div`\n  margin: 0;\n  padding: 0;\n  font-size: 0.8rem;\n  & a {\n    color: #000;\n    text-decoration: underline;\n  }\n`\n\nconst Tags = ({ pageContext, data }) => {\n  const { tag } = pageContext\n  const { edges } = data.allMarkdownRemark\n  const title = `${tag}`\n\n  return (\n    <Layout>\n      <PageHelmet title={title} />\n      <PostListSection title={title} posts={edges} />\n      <SectionFooter>\n        <Link to=\"/tags\">모든 태그 보기</Link>\n      </SectionFooter>\n    </Layout>\n  )\n}\n\nTags.propTypes = {\n  pageContext: PropTypes.shape({\n    tag: PropTypes.string.isRequired,\n  }),\n  data: PropTypes.shape({\n    allMarkdownRemark: PropTypes.shape({\n      edges: PropTypes.arrayOf(\n        PropTypes.shape({\n          node: PropTypes.shape({\n            id: PropTypes.string.isRequired,\n            frontmatter: PropTypes.shape({\n              title: PropTypes.string.isRequired,\n              date: PropTypes.string.isRequired,\n            }),\n            fields: PropTypes.shape({\n              slug: PropTypes.string.isRequired,\n            }),\n          }),\n        }).isRequired\n      ),\n    }),\n  }),\n}\n\nexport default Tags\n\nexport const pageQuery = graphql`\n  query($tag: String) {\n    allMarkdownRemark(\n      limit: 2000\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: {\n        frontmatter: {\n          tags: { in: [$tag] },\n          published: { ne: false }\n        }\n      }\n    ) {\n      edges {\n        node {\n          id\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            date\n          }\n        }\n      }\n    }\n  }\n`\n"],"names":["SectionWrapper","styled","SectionTitle","PostListItem","PostDate","PostTitle","PostListSection","title","posts","titleWithCount","map","node","formattedDate","moment","frontmatter","date","local","format","key","id","Link","to","fields","slug","defaultProps","SectionFooter","pageContext","data","tag","edges","allMarkdownRemark"],"sourceRoot":""}