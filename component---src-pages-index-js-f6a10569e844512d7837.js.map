{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/site-menu.js","webpack:///./src/components/notice.js","webpack:///./src/components/header.js","webpack:///./src/components/footer.js","webpack:///./src/components/layout.js"],"names":["IndexPage","data","_public_static_d_3525401390_json__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_3__","_components_seo__WEBPACK_IMPORTED_MODULE_4__","title","allMarkdownRemark","totalCount","edges","map","_ref","node","key","id","gatsby__WEBPACK_IMPORTED_MODULE_2__","to","fields","slug","style","marginBottom","frontmatter","color","date","excerpt","m","module","exports","require","default","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","d","__webpack_exports__","loader","enqueue","React","createContext","ProdPageRenderer","location","pageResources","InternalPageRenderer","Object","assign","json","SEO","description","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","name","content","property","concat","defaultProps","ContentWrapper","styled","div","withConfig","displayName","componentId","List","ul","InlineListItem","li","ListItem","props","react_default","href","children","SiteMenu","site_menu_ListItem","NoticeWrapper","Title","h5","Description","span","Notice","emoji","role","aria-label","siteTitle","HeaderWrapper","header","SiteInfo","SiteTitle","h1","SiteDescription","p","Header","gatsby_browser_entry","site_menu","notice","social","footer","Footer","author","footer_ContentWrapper","Date","getFullYear","Layout","_2457312135","Fragment","margin","maxWidth","padding","paddingTop","minHeight"],"mappings":"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","file":"component---src-pages-index-js-f6a10569e844512d7837.js","sourcesContent":["import React from \"react\"\nimport { useStaticQuery, graphql, Link } from \"gatsby\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nconst IndexPage = () => {\n  const data = useStaticQuery(graphql`\n    query {\n      allMarkdownRemark(sort: { order: DESC, fields: frontmatter___date }) {\n        totalCount\n        edges {\n          node {\n            id\n            frontmatter {\n              title\n              date(formatString: \"DD MMMM, YYYY\")\n            }\n            fields {\n              slug\n            }\n            excerpt\n          }\n        }\n      }\n    }\n  `)\n  return (\n    <Layout>\n      <SEO title=\"Home\" />\n      <div>\n        <h4>{data.allMarkdownRemark.totalCount} Posts</h4>\n        {data.allMarkdownRemark.edges.map(({ node }) => (\n          <div key={node.id}>\n            <Link\n              to={node.fields.slug}\n            >\n              <h3\n                style={{\n                  marginBottom: `1rem`,\n                }}\n              >\n                {node.frontmatter.title}{\" \"}\n                <span\n                  style={{\n                    color: `#bbb`,\n                  }}\n                >\n                  — {node.frontmatter.date}\n                </span>\n              </h3>\n            </Link>\n            <p>{node.excerpt}</p>\n          </div>\n        ))}\n      </div>\n    </Layout>\n  )\n}\n\nexport default IndexPage\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nexport default SEO\n","import React from \"react\"\nimport styled from \"styled-components\"\n\nconst ContentWrapper = styled.div`\n  width: 100%;\n  background-color: #ffcc06;\n  padding: 0.5rem;\n  text-align: center;\n`\n\nconst List = styled.ul`\n  liststyle: none;\n  margin: 0;\n`\n\nconst InlineListItem = styled.li`\n  display: inline-block;\n  margin-bottom: 0;\n  margin-left: 0.8rem;\n  &:first-child {\n    margin-left: 0rem;\n  }\n  & a {\n    color: white;\n  }\n  & a:hover {\n    color: #202c6a;\n  }\n`\n\nconst ListItem = props => (\n  <InlineListItem>\n    <a href={props.to}>{props.children}</a>\n  </InlineListItem>\n)\n\nconst SiteMenu = () => (\n  <ContentWrapper>\n    <List>\n      <ListItem to=\"/\">Home</ListItem>\n      <ListItem to=\"/about/\">About</ListItem>\n      <ListItem to=\"/posts/\">Posts</ListItem>\n      <ListItem to=\"/tags/\">Tags</ListItem>\n    </List>\n  </ContentWrapper>\n)\n\nexport default SiteMenu\n","import React from \"react\"\nimport styled from \"styled-components\"\nimport PropTypes from \"prop-types\"\n\nconst NoticeWrapper = styled.div`\n  width: 100%;\n  background-color: #f2f2f2;\n  padding: 0.5rem;\n  text-align: center;\n  font-size: 0.8rem;\n`\n\nconst Title = styled.h5`\n  font-weight: bold;\n  color: #000;\n  margin: 0 0 0.5rem 0;\n  font-size: 0.7rem;\n`\n\nconst Description = styled.span`\n  margin-left: 1rem;\n  font-size: 0.7rem;\n`\n\nconst Notice = ({ emoji, title, description }) => (\n  <NoticeWrapper>\n    <Title>\n      <span role=\"img\" aria-label=\"{title}\">\n        {emoji}\n      </span>\n      {title}\n    </Title>\n    <Description>{description}</Description>\n  </NoticeWrapper>\n)\n\nNotice.propTypes = {\n  emoji: PropTypes.string,\n  title: PropTypes.string,\n  description: PropTypes.string,\n}\n\nNotice.defaultProps = {\n  emoji: `📣`,\n  siteTitle: ``,\n  description: ``,\n}\n\nexport default Notice\n","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport styled from \"styled-components\"\nimport PropTypes from \"prop-types\"\nimport SiteMenu from \"./site-menu\"\nimport Notice from \"./notice\"\n\nconst HeaderWrapper = styled.header`\n  background-color: #202c6a;\n`\n\nconst SiteInfo = styled.div`\n  margin: 0 auto;\n  max-width: 960px;\n  padding: 2.5rem;\n  text-align: center;\n`\n\nconst SiteTitle = styled.h1`\n  display: inline-block;\n  margin: 0 0 0.8rem 0;\n  & a {\n    color: white;\n  }\n  & a:hover {\n    color: #ffcc06;\n  }\n`\n\nconst SiteDescription = styled.p`\n  color: #f2f2f2;\n  margin: 0;\n  font-size: 0.8rem;\n`\n\nconst Header = ({ siteTitle, description }) => (\n  <HeaderWrapper>\n    <SiteInfo>\n      <SiteTitle>\n        <Link to=\"/\">{siteTitle}</Link>\n      </SiteTitle>\n      <SiteDescription>{description}</SiteDescription>\n    </SiteInfo>\n    <SiteMenu />\n    <Notice\n      emoji=\"🚧\"\n      title=\"사이트 공사 중\"\n      description=\"일부 기능이 제대로 동작하지 않을 수 있습니다.\"\n    />\n  </HeaderWrapper>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n  description: PropTypes.string,\n  social: PropTypes.array,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n  description: ``,\n  social: [],\n}\n\nexport default Header\n","import React from \"react\"\nimport styled from \"styled-components\"\nimport PropTypes from \"prop-types\"\n\nconst ContentWrapper = styled.footer`\n  border-top: 1px solid #EFEAF4;\n  padding-top: 0.5rem;\n  padding-bottom: 1rem;\n  text-align: center;\n  font-size: 0.8rem;\n`\n\nconst Footer = ({ author }) => (\n  <ContentWrapper>\n    © 2014-{new Date().getFullYear()} <b>{author}</b>. All rights reserved.\n    Built with\n    {` `}\n    <b>\n      <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n    </b>.\n  </ContentWrapper>\n)\n\nFooter.propTypes = {\n  author: PropTypes.string,\n}\n\nFooter.defaultProps = {\n  author: ``,\n}\n\nexport default Footer\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport Header from \"./header\"\nimport Footer from \"./footer\"\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          author\n          title\n          description\n          social {\n            name\n            url\n          }\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <Header\n        siteTitle={data.site.siteMetadata.title}\n        description={data.site.siteMetadata.description}\n        social={data.site.siteMetadata.social}\n      />\n      <div\n        style={{\n          margin: `0 auto`,\n          maxWidth: 960,\n          padding: `0px 1rem 1.45rem 1rem`,\n          paddingTop: 0,\n        }}\n      >\n        <main\n          style={{\n            minHeight: 400,\n          }}\n        >\n          {children}\n        </main>\n      </div>\n      <Footer author={data.site.siteMetadata.author} />\n    </>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}