{"version":3,"sources":["webpack:///./src/pages/posts.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/header.js","webpack:///./src/components/footer.js","webpack:///./src/components/layout.js"],"names":["PostsPage","data","_public_static_d_3525401390_json__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_3__","_components_seo__WEBPACK_IMPORTED_MODULE_4__","title","allMarkdownRemark","totalCount","edges","map","_ref","node","key","id","gatsby__WEBPACK_IMPORTED_MODULE_2__","to","fields","slug","style","marginBottom","frontmatter","color","date","excerpt","m","module","exports","require","default","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","d","__webpack_exports__","loader","enqueue","React","createContext","ProdPageRenderer","location","pageResources","InternalPageRenderer","Object","assign","json","SEO","description","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","name","content","property","concat","defaultProps","ListLink","props","react_default","display","marginRight","gatsby_browser_entry","children","Header","siteTitle","social","background","margin","maxWidth","padding","textDecoration","paddingTop","listStyle","float","item","index","paddingLeft","href","url","width","backgroundColor","textAlign","header_ListLink","role","aria-label","fontSize","Footer","author","borderTop","paddingBottom","Date","getFullYear","Layout","_2457312135","Fragment","header","minHeight","footer"],"mappings":"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","file":"component---src-pages-posts-js-480e1f8d78c338278759.js","sourcesContent":["import React from \"react\"\nimport { useStaticQuery, graphql, Link } from \"gatsby\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nconst PostsPage = () => {\n  const data = useStaticQuery(graphql`\n    query {\n      allMarkdownRemark(sort: { order: DESC, fields: frontmatter___date }) {\n        totalCount\n        edges {\n          node {\n            id\n            frontmatter {\n              title\n              date(formatString: \"DD MMMM, YYYY\")\n            }\n            fields {\n              slug\n            }\n            excerpt\n          }\n        }\n      }\n    }\n  `)\n  return (\n    <Layout>\n      <SEO title=\"Posts\" />\n      <div>\n        <h4>{data.allMarkdownRemark.totalCount} Posts</h4>\n        {data.allMarkdownRemark.edges.map(({ node }) => (\n          <div key={node.id}>\n            <Link to={node.fields.slug}>\n              <h3\n                style={{\n                  marginBottom: `1rem`,\n                }}\n              >\n                {node.frontmatter.title}{\" \"}\n                <span\n                  style={{\n                    color: `#bbb`,\n                  }}\n                >\n                  — {node.frontmatter.date}\n                </span>\n              </h3>\n            </Link>\n            <p>{node.excerpt}</p>\n          </div>\n        ))}\n      </div>\n    </Layout>\n  )\n}\n\nexport default PostsPage\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nexport default SEO\n","import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\n\nconst ListLink = props => (\n  <li style={{ display: `inline-block`, marginBottom: 0, marginRight: `1rem` }}>\n    <Link\n      style={{\n        color: `white`,\n      }}\n      to={props.to}\n    >\n      {props.children}\n    </Link>\n  </li>\n)\n\nconst Header = ({ siteTitle, description, social }) => (\n  <header\n    style={{\n      background: `rebeccapurple`,\n    }}\n  >\n    <div\n      style={{\n        margin: `0 auto`,\n        maxWidth: 960,\n        padding: `1.45rem 1.0875rem`,\n      }}\n    >\n      <h1 style={{ margin: 0 }}>\n        <Link\n          to=\"/\"\n          style={{\n            color: `white`,\n            textDecoration: `none`,\n          }}\n        >\n          {siteTitle}\n        </Link>\n      </h1>\n      <div\n        style={{\n          color: `white`,\n          textDecoration: `none`,\n          paddingTop: `1rem`,\n        }}\n      >\n        <span>{description}</span>\n        <ul\n          style={{\n            listStyle: `none`,\n            display: `inline`,\n            margin: 0,\n            padding: 0,\n            float: `right`,\n          }}\n        >\n          {social.map((item, index) => (\n            <li\n              key={index}\n              style={{\n                display: `inline`,\n                margin: 0,\n                paddingLeft: `0.5rem`,\n              }}\n            >\n              <a\n                href={item.url}\n                style={{\n                  color: `white`,\n                  textDecoration: `none`,\n                }}\n              >\n                {item.name}\n              </a>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n    <div\n      style={{\n        width: `100%`,\n        backgroundColor: `#ffcc06`,\n        padding: `0.5rem`,\n        textAlign: `center`,\n      }}\n    >\n      <ul style={{ listStyle: `none`, margin: 0 }}>\n        <ListLink to=\"/about/\">About</ListLink>\n        <ListLink to=\"/posts/\">Posts</ListLink>\n        <ListLink to=\"/tags/\">Tags</ListLink>\n      </ul>\n    </div>\n    <div\n      style={{\n        width: `100%`,\n        backgroundColor: `#f2f2f2`,\n        padding: `0.5rem`,\n        textAlign: `center`,\n      }}\n    >\n      <h4\n        style={{\n          margin: `0`,\n        }}\n      >\n        <span role=\"img\" aria-label=\"construction\">\n          🚧\n        </span>\n        사이트 공사 중\n      </h4>\n      <p\n        style={{\n          fontSize: `0.8rem`,\n          margin: `0`,\n        }}\n      >\n        일부 기능이 제대로 동작하지 않을 수 있습니다.\n      </p>\n    </div>\n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n  description: PropTypes.string,\n  social: PropTypes.array,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n  description: ``,\n  social: [],\n}\n\nexport default Header\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nconst Footer = ({ author }) => (\n  <footer\n    style={{\n      borderTop: `1px solid #EFEAF4`,\n      paddingTop: `0.5rem`,\n      paddingBottom: `1rem`,\n      textAlign: `center`,\n      fontSize: `0.8rem`,\n    }}\n  >\n    © 2014-{new Date().getFullYear()} <b>{author}</b>. All rights reserved. Built with\n    {` `}\n    <b><a\n      href=\"https://www.gatsbyjs.org\"\n      style={{\n        color: `rebeccapurple`,\n        textDecoration: `none`,\n      }}\n    >\n      Gatsby\n    </a></b>\n  </footer>\n)\n\nFooter.propTypes = {\n  author: PropTypes.string,\n}\n\nFooter.defaultProps = {\n  author: ``,\n}\n\nexport default Footer\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport Header from \"./header\"\nimport Footer from \"./footer\"\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          author\n          title\n          description\n          social {\n            name\n            url\n          }\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <Header\n        siteTitle={data.site.siteMetadata.title}\n        description={data.site.siteMetadata.description}\n        social={data.site.siteMetadata.social}\n      />\n      <div\n        style={{\n          margin: `0 auto`,\n          maxWidth: 960,\n          padding: `0px 1.0875rem 1.45rem`,\n          paddingTop: 0,\n        }}\n      >\n        <main\n          style={{\n            minHeight: 400,\n          }}\n        >\n          {children}\n        </main>\n      </div>\n      <Footer author={data.site.siteMetadata.author} />\n    </>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}