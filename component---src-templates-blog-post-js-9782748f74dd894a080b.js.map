{"version":3,"file":"component---src-templates-blog-post-js-9782748f74dd894a080b.js","mappings":"2IAIMA,E,KAAiBC,QAAAA,IAAAA,WAAH,0EAAGA,CAAH,oEAsBpB,IAfqB,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,UAAWC,EAApB,EAAoBA,KAApB,OACnB,gBAACJ,EAAD,KACE,wBAAMK,KAAK,MAAM,aAAYF,GAC1BD,GAEFE,K,sHCNCE,EAAYL,EAAAA,QAAAA,GAAAA,WAAH,gEAAGA,CAAH,kCAKTM,EAAcN,EAAAA,QAAAA,QAAAA,WAAH,kEAAGA,CAAH,uRAkCXO,EAAeP,EAAAA,QAAAA,IAAAA,WAAH,mEAAGA,CAAH,qDAOZQ,EAAcR,EAAAA,QAAAA,IAAAA,WAAH,kEAAGA,CAAH,yBAKXS,EAAUT,EAAAA,QAAAA,IAAAA,WAAH,8DAAGA,CAAH,4DAMPU,EAAqBV,EAAAA,QAAAA,IAAAA,WAAH,yEAAGA,CAAH,wGAQlBW,EAAc,SAAAC,GAClB,IAAMC,EAAYD,EAAME,IAClBC,EAAOH,EAAMI,KAAKC,OAAOF,KACzBG,EAAQN,EAAMI,KAAKG,YAAYD,MAErC,YAAaE,IAATL,QAAgCK,IAAVF,EAEtB,gBAACR,EAAD,KACGG,EADH,KACe,gBAAC,EAAAQ,KAAD,CAAMC,GAAIP,GAAOG,IAI3B,6BAoCX,UAhCyB,SAAAN,GACvB,IAAMI,EAAOJ,EAAMW,KAAKC,YAClBC,EAAU,IAAOT,EAAKS,WAAZ,KACVC,EAAY,CAAEP,YAAa,GAAIF,OAAQ,IACvCU,EAAWf,EAAMW,KAAKI,UAAYD,EAClCE,EAAehB,EAAMW,KAAKK,cAAgBF,EAE1CG,EAAgBC,GAAAA,CAAOd,EAAKG,YAAYY,MAAMC,QAAQC,OAAtC,kBAEtB,OACE,gBAAC,IAAD,KACE,gBAAC,IAAD,CAAYf,MAAOF,EAAKG,YAAYD,QACpC,gBAACb,EAAD,KAAYW,EAAKG,YAAYD,OAC7B,gBAACX,EAAD,KACE,gBAAC,IAAD,CAAcN,KAAK,KAAKC,UAAU,OAAOC,KAAM0B,IADjD,MAGE,gBAAC,IAAD,CAAc5B,KAAK,IAAIC,UAAU,aAAaC,KAAMsB,KAEtD,gBAACnB,EAAD,CAAa4B,wBAAyB,CAAEC,OAAQnB,EAAKoB,QACrD,gBAAC5B,EAAD,KACGQ,EAAKG,YAAYkB,KAAKC,KAAI,SAAAC,GAAG,OAC5B,gBAAC,IAAD,CAASC,IAAKD,EAAKE,KAAMF,QAG7B,gBAAC9B,EAAD,KACE,gBAACE,EAAD,CAAaG,IAAG,OAAUE,KAAMY,IAChC,gBAACjB,EAAD,CAAaG,IAAG,OAAUE,KAAMW","sources":["webpack://soharu-gatsby-blog/./src/components/post-meta-item.js","webpack://soharu-gatsby-blog/./src/templates/blog-post.js"],"sourcesContent":["import React from \"react\"\nimport styled from \"styled-components\"\nimport PropTypes from \"prop-types\"\n\nconst ContentWrapper = styled.div`\n  display: inline-block;\n  vertical-align: middle;\n  padding: 0;\n  margin: 0;\n`\n\nconst PostMetaItem = ({ icon, iconLabel, text }) => (\n  <ContentWrapper>\n    <span role=\"img\" aria-label={iconLabel}>\n      {icon}\n    </span>\n    {text}\n  </ContentWrapper>\n)\n\nPostMetaItem.propTypes = {\n  icon: PropTypes.string.isRequired,\n  iconLabel: PropTypes.string.isRequired,\n  text: PropTypes.string.isRequired,\n}\n\nexport default PostMetaItem\n","import React from \"react\"\nimport { graphql, Link } from \"gatsby\"\nimport moment from \"moment\"\nimport styled from \"styled-components\"\nimport Layout from \"../components/layout\"\nimport PageHelmet from \"../components/pageHelmet\"\nimport PostMetaItem from \"../components/post-meta-item\"\nimport TagItem from \"../components/tag-item\"\nimport \"katex/dist/katex.min.css\"\n\nconst PostTitle = styled.h2`\n  margin: 0;\n  padding: 0 0 1rem 0;\n`\n\nconst PostSection = styled.section`\n  margin: 0;\n  padding: 0 0 1rem 0;\n\n  & h1, h2, h3, h4, h5, h6 {\n    margin: 2rem 0 1rem 0;\n  }\n\n  & a {\n    color: #3366cc;\n  }\n\n  & a:hover {\n    text-decoration: underline;\n  }\n\n  & figure {\n    margin: 0;\n    padding: 0 1rem;\n    text-align: center;\n    font-size: 0.8rem;\n  }\n\n  & figure img {\n    margin: 0;\n    padding: 0;\n  }\n\n  & figure figcaption {\n    margin: 0;\n    padding: 0.2rem;\n  }\n`\n\nconst PostMetaList = styled.div`\n  margin: 0;\n  padding: 0;\n  color: #333;\n  font-size: 0.8rem;\n`\n\nconst PostTagList = styled.div`\n  margin: 0;\n  padding: 0;\n`\n\nconst PostNav = styled.div`\n  margin: 0.5rem 0 0 0;\n  padding: 0.5rem 0;\n  font-size: 0.8rem;\n`\n\nconst PostNavItemWrapper = styled.div`\n  margin: 0 0 0.2rem 0;\n  padding: 0.5rem;\n  background-color: #f2f2f2;\n  font-size: 0.8rem;\n  border-radius: 0.3rem;\n`\n\nconst PostNavItem = props => {\n  const direction = props.dir\n  const slug = props.post.fields.slug\n  const title = props.post.frontmatter.title\n\n  if (slug !== undefined && title !== undefined) {\n    return (\n      <PostNavItemWrapper>\n        {direction}: <Link to={slug}>{title}</Link>\n      </PostNavItemWrapper>\n    )\n  } else {\n    return <div />\n  }\n}\n\nconst BlogPostTemplate = props => {\n  const post = props.data.currentPost\n  const timeToRead = ` ${post.timeToRead} Î∂Ñ`\n  const emptyPost = { frontmatter: {}, fields: {} }\n  const nextPost = props.data.nextPost || emptyPost\n  const previousPost = props.data.previousPost || emptyPost\n\n  const formattedDate = moment(post.frontmatter.date).local().format(` YYYYÎÖÑ MMÏõî DDÏùº`)\n\n  return (\n    <Layout>\n      <PageHelmet title={post.frontmatter.title} />\n      <PostTitle>{post.frontmatter.title}</PostTitle>\n      <PostMetaList>\n        <PostMetaItem icon=\"üóì\" iconLabel=\"Date\" text={formattedDate} />\n        {` ¬∑ `}\n        <PostMetaItem icon=\"‚è±\" iconLabel=\"timeToRead\" text={timeToRead} />\n      </PostMetaList>\n      <PostSection dangerouslySetInnerHTML={{ __html: post.html }} />\n      <PostTagList>\n        {post.frontmatter.tags.map(tag => (\n          <TagItem key={tag} name={tag} />\n        ))}\n      </PostTagList>\n      <PostNav>\n        <PostNavItem dir={`Ïù¥Ï†Ñ Í∏Ä`} post={previousPost} />\n        <PostNavItem dir={`Îã§Ïùå Í∏Ä`} post={nextPost} />\n      </PostNav>\n    </Layout>\n  )\n}\n\nexport default BlogPostTemplate\n\nexport const query = graphql`\n  query($slug: String!, $nextSlug: String!, $previousSlug: String!) {\n    currentPost: markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      frontmatter {\n        title\n        date\n        tags\n      }\n      timeToRead\n    }\n    nextPost: markdownRemark(fields: { slug: { eq: $nextSlug } }) {\n      frontmatter {\n        title\n      }\n      fields {\n        slug\n      }\n    }\n    previousPost: markdownRemark(fields: { slug: { eq: $previousSlug } }) {\n      frontmatter {\n        title\n      }\n      fields {\n        slug\n      }\n    }\n  }\n`\n"],"names":["ContentWrapper","styled","icon","iconLabel","text","role","PostTitle","PostSection","PostMetaList","PostTagList","PostNav","PostNavItemWrapper","PostNavItem","props","direction","dir","slug","post","fields","title","frontmatter","undefined","Link","to","data","currentPost","timeToRead","emptyPost","nextPost","previousPost","formattedDate","moment","date","local","format","dangerouslySetInnerHTML","__html","html","tags","map","tag","key","name"],"sourceRoot":""}