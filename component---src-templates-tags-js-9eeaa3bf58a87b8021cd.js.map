{"version":3,"sources":["webpack:///./src/templates/tags.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/header.js","webpack:///./src/components/footer.js","webpack:///./src/components/layout.js"],"names":["__webpack_require__","r","__webpack_exports__","d","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby__WEBPACK_IMPORTED_MODULE_1__","_components_layout__WEBPACK_IMPORTED_MODULE_2__","_components_seo__WEBPACK_IMPORTED_MODULE_3__","Tags","_ref","pageContext","data","tag","_data$allMarkdownRema","allMarkdownRemark","edges","totalCount","title","tagHeader","a","createElement","map","_ref2","node","slug","fields","frontmatter","key","to","m","module","exports","require","default","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","loader","enqueue","React","createContext","ProdPageRenderer","location","pageResources","InternalPageRenderer","Object","assign","json","SEO","description","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","name","content","property","concat","defaultProps","ListLink","props","react_default","style","display","marginBottom","marginRight","gatsby_browser_entry","color","children","Header","siteTitle","social","background","margin","maxWidth","padding","textDecoration","paddingTop","listStyle","float","item","index","paddingLeft","href","url","width","backgroundColor","textAlign","header_ListLink","role","aria-label","fontSize","Footer","author","borderTop","paddingBottom","Date","getFullYear","Layout","_2457312135","Fragment","header","minHeight","footer"],"mappings":"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","file":"component---src-templates-tags-js-9eeaa3bf58a87b8021cd.js","sourcesContent":["import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nconst Tags = ({ pageContext, data }) => {\n  const { tag } = pageContext\n  const { edges, totalCount } = data.allMarkdownRemark\n  const title = `Posts tagged with \"${tag}\"`\n  const tagHeader = `${totalCount} post${\n    totalCount === 1 ? \"\" : \"s\"\n  } tagged with \"${tag}\"`\n\n  return (\n    <Layout>\n      <SEO title={title} />\n      <h2>{tagHeader}</h2>\n      <ul>\n        {edges.map(({ node }) => {\n          const { slug } = node.fields\n          const { title } = node.frontmatter\n          return (\n            <li key={slug}>\n              <Link to={slug}>{title}</Link>\n            </li>\n          )\n        })}\n      </ul>\n      <Link to=\"/tags\">All tags</Link>\n    </Layout>\n  )\n}\n\nTags.propTypes = {\n  pageContext: PropTypes.shape({\n    tag: PropTypes.string.isRequired,\n  }),\n  data: PropTypes.shape({\n    allMarkdownRemark: PropTypes.shape({\n      totalCount: PropTypes.number.isRequired,\n      edges: PropTypes.arrayOf(\n        PropTypes.shape({\n          node: PropTypes.shape({\n            frontmatter: PropTypes.shape({\n              title: PropTypes.string.isRequired,\n            }),\n            fields: PropTypes.shape({\n              slug: PropTypes.string.isRequired,\n            }),\n          }),\n        }).isRequired\n      ),\n    }),\n  }),\n}\n\nexport default Tags\n\nexport const pageQuery = graphql`\n  query($tag: String) {\n    allMarkdownRemark(\n      limit: 2000\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { tags: { in: [$tag] } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n          }\n        }\n      }\n    }\n  }\n`\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nexport default SEO\n","import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\n\nconst ListLink = props => (\n  <li style={{ display: `inline-block`, marginBottom: 0, marginRight: `1rem` }}>\n    <Link\n      style={{\n        color: `white`,\n      }}\n      to={props.to}\n    >\n      {props.children}\n    </Link>\n  </li>\n)\n\nconst Header = ({ siteTitle, description, social }) => (\n  <header\n    style={{\n      background: `rebeccapurple`,\n    }}\n  >\n    <div\n      style={{\n        margin: `0 auto`,\n        maxWidth: 960,\n        padding: `1.45rem 1.0875rem`,\n      }}\n    >\n      <h1 style={{ margin: 0 }}>\n        <Link\n          to=\"/\"\n          style={{\n            color: `white`,\n            textDecoration: `none`,\n          }}\n        >\n          {siteTitle}\n        </Link>\n      </h1>\n      <div\n        style={{\n          color: `white`,\n          textDecoration: `none`,\n          paddingTop: `1rem`,\n        }}\n      >\n        <span>{description}</span>\n        <ul\n          style={{\n            listStyle: `none`,\n            display: `inline`,\n            margin: 0,\n            padding: 0,\n            float: `right`,\n          }}\n        >\n          {social.map((item, index) => (\n            <li\n              key={index}\n              style={{\n                display: `inline`,\n                margin: 0,\n                paddingLeft: `0.5rem`,\n              }}\n            >\n              <a\n                href={item.url}\n                style={{\n                  color: `white`,\n                  textDecoration: `none`,\n                }}\n              >\n                {item.name}\n              </a>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n    <div\n      style={{\n        width: `100%`,\n        backgroundColor: `#ffcc06`,\n        padding: `0.5rem`,\n        textAlign: `center`,\n      }}\n    >\n      <ul style={{ listStyle: `none`, margin: 0 }}>\n        <ListLink to=\"/about/\">About</ListLink>\n        <ListLink to=\"/posts/\">Posts</ListLink>\n        <ListLink to=\"/tags/\">Tags</ListLink>\n      </ul>\n    </div>\n    <div\n      style={{\n        width: `100%`,\n        backgroundColor: `#f2f2f2`,\n        padding: `0.5rem`,\n        textAlign: `center`,\n      }}\n    >\n      <h4\n        style={{\n          margin: `0`,\n        }}\n      >\n        <span role=\"img\" aria-label=\"construction\">\n          🚧\n        </span>\n        사이트 공사 중\n      </h4>\n      <p\n        style={{\n          fontSize: `0.8rem`,\n          margin: `0`,\n        }}\n      >\n        일부 기능이 제대로 동작하지 않을 수 있습니다.\n      </p>\n    </div>\n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n  description: PropTypes.string,\n  social: PropTypes.array,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n  description: ``,\n  social: [],\n}\n\nexport default Header\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nconst Footer = ({ author }) => (\n  <footer\n    style={{\n      borderTop: `1px solid #EFEAF4`,\n      paddingTop: `0.5rem`,\n      paddingBottom: `1rem`,\n      textAlign: `center`,\n      fontSize: `0.8rem`,\n    }}\n  >\n    © 2014-{new Date().getFullYear()} <b>{author}</b>. All rights reserved. Built with\n    {` `}\n    <b><a\n      href=\"https://www.gatsbyjs.org\"\n      style={{\n        color: `rebeccapurple`,\n        textDecoration: `none`,\n      }}\n    >\n      Gatsby\n    </a></b>\n  </footer>\n)\n\nFooter.propTypes = {\n  author: PropTypes.string,\n}\n\nFooter.defaultProps = {\n  author: ``,\n}\n\nexport default Footer\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport Header from \"./header\"\nimport Footer from \"./footer\"\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          author\n          title\n          description\n          social {\n            name\n            url\n          }\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <Header\n        siteTitle={data.site.siteMetadata.title}\n        description={data.site.siteMetadata.description}\n        social={data.site.siteMetadata.social}\n      />\n      <div\n        style={{\n          margin: `0 auto`,\n          maxWidth: 960,\n          padding: `0px 1.0875rem 1.45rem`,\n          paddingTop: 0,\n        }}\n      >\n        <main\n          style={{\n            minHeight: 400,\n          }}\n        >\n          {children}\n        </main>\n      </div>\n      <Footer author={data.site.siteMetadata.author} />\n    </>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}