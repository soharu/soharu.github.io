{"version":3,"sources":["webpack:///./src/components/post-preview.js","webpack:///./src/pages/index.js","webpack:///./src/components/post-meta-item.js"],"names":["ContentWrapper","styled","div","Title","h3","Excerpt","PostMetaList","PostPreview","post","formattedDate","moment","frontmatter","date","local","format","timeToRead","to","fields","slug","title","excerpt","icon","iconLabel","text","SectionWrapper","section","SectionTitle","h2","SectionContents","SectionFooter","IndexPage","data","allMarkdownRemark","edges","map","node","key","id","PostMetaItem","role","aria-label"],"mappings":"wNAMMA,EAAiBC,IAAOC,IAAV,+EAAGD,CAAH,iEAMdE,EAAQF,IAAOG,GAAV,sEAAGH,CAAH,wHAaLI,EAAUJ,IAAOC,IAAV,wEAAGD,CAAH,0CAMPK,EAAeL,IAAOC,IAAV,6EAAGD,CAAH,6GA6BHM,EApBK,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACfC,EAAgBC,IAAOF,EAAKG,YAAYC,MAC3CC,QACAC,OAFmB,cAGhBC,EAAgBP,EAAKO,WAAX,OAChB,OACE,kBAACf,EAAD,KACE,kBAACG,EAAD,KACE,kBAAC,OAAD,CAAMa,GAAIR,EAAKS,OAAOC,MAAOV,EAAKG,YAAYQ,OAAc,KAE9D,kBAACd,EAAD,KAAUG,EAAKY,SACf,kBAACd,EAAD,KACE,kBAAC,IAAD,CAAce,KAAK,KAAKC,UAAU,OAAOC,KAAMd,IADjD,MAGE,kBAAC,IAAD,CAAcY,KAAK,IAAIC,UAAU,aAAaC,KAAMR,OC/CtDS,EAAiBvB,IAAOwB,QAAV,4EAAGxB,CAAH,yBAKdyB,EAAezB,IAAO0B,GAAV,0EAAG1B,CAAH,kCAKZ2B,EAAkB3B,IAAOC,IAAV,6EAAGD,CAAH,yBAKf4B,EAAgB5B,IAAOC,IAAV,2EAAGD,CAAH,6GAsDJ6B,UA3CG,WAChB,IAAMC,EAAI,OAwBV,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKZ,MAAM,SACX,kBAACK,EAAD,KACE,kBAACE,EAAD,qBACA,kBAACE,EAAD,KACGG,EAAKC,kBAAkBC,MAAMC,KAAI,gBAAGC,EAAH,EAAGA,KAAH,OAChC,kBAAC,EAAD,CAAaC,IAAKD,EAAKE,GAAI7B,KAAM2B,QAGrC,kBAACN,EAAD,KACE,kBAAC,OAAD,CAAMb,GAAG,UAAT,uB,86DCrEV,yBAIMhB,EAJN,UAIuBC,EAAOC,IAAV,qFAAGD,CAAH,oEAsBLqC,IAfM,SAAC,GAAD,IAAGjB,EAAH,EAAGA,KAAMC,EAAT,EAASA,UAAWC,EAApB,EAAoBA,KAApB,OACnB,kBAACvB,EAAD,KACE,0BAAMuC,KAAK,MAAMC,aAAYlB,GAC1BD,GAEFE","file":"component---src-pages-index-js-57d9bfa77d0228a52b8a.js","sourcesContent":["import React from \"react\"\nimport { Link } from \"gatsby\"\nimport moment from \"moment\"\nimport styled from \"styled-components\"\nimport PostMetaItem from \"../components/post-meta-item\"\n\nconst ContentWrapper = styled.div`\n  margin-bottom: 0.5rem;\n  padding: 1rem;\n  background-color: #f2f2f2;\n`\n\nconst Title = styled.h3`\n  margin: 0 0 0.8rem 0;\n  padding: 0;\n  font-size: 1rem;\n  background-color: #f2f2f2;\n  & a {\n    color: #000000;\n  }\n  & a:hover {\n    color: #202c6a;\n  }\n`\n\nconst Excerpt = styled.div`\n  margin: 0;\n  padding: 0;\n  font-size: 0.8rem;\n`\n\nconst PostMetaList = styled.div`\n  margin: 0.5rem 0 0 0;\n  padding: 0.1rem 0rem;\n  text-align: right;\n  color: #333;\n  font-size: 0.7rem;\n  font-weight: light;\n`\n\nconst PostPreview = ({ post }) => {\n  const formattedDate = moment(post.frontmatter.date)\n    .local()\n    .format(`YYYY/MM/DD`)\n  const timeToRead = `${post.timeToRead} min`\n  return (\n    <ContentWrapper>\n      <Title>\n        <Link to={post.fields.slug}>{post.frontmatter.title}</Link>{\" \"}\n      </Title>\n      <Excerpt>{post.excerpt}</Excerpt>\n      <PostMetaList>\n        <PostMetaItem icon=\"🗓\" iconLabel=\"Date\" text={formattedDate} />\n        {` · `}\n        <PostMetaItem icon=\"⏱\" iconLabel=\"timeToRead\" text={timeToRead} />\n      </PostMetaList>\n    </ContentWrapper>\n  )\n}\n\nexport default PostPreview\n","import React from \"react\"\nimport { useStaticQuery, graphql, Link } from \"gatsby\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport PostPreview from \"../components/post-preview\"\nimport styled from \"styled-components\"\n\nconst SectionWrapper = styled.section`\n  margin: 0;\n  padding: 0;\n`\n\nconst SectionTitle = styled.h2`\n  margin: 0;\n  padding: 0 0 1rem 0;\n`\n\nconst SectionContents = styled.div`\n  margin: 0;\n  padding: 0;\n`\n\nconst SectionFooter = styled.div`\n  margin: 0;\n  padding: 0.5rem;\n  text-align: center;\n  font-size: 0.8rem;\n  background-color: #ffcc06;\n  & a {\n    color: #ffffff;\n  }\n`\n\nconst IndexPage = () => {\n  const data = useStaticQuery(graphql`\n    query {\n      allMarkdownRemark(\n        filter: {frontmatter: {layout: {ne: \"draft\"}}}\n        limit: 5\n        sort: { order: DESC, fields: frontmatter___date }\n      ) {\n        edges {\n          node {\n            id\n            frontmatter {\n              title\n              date\n            }\n            fields {\n              slug\n            }\n            timeToRead\n            excerpt(truncate: true)\n          }\n        }\n      }\n    }\n  `)\n  return (\n    <Layout>\n      <SEO title=\"Home\" />\n      <SectionWrapper>\n        <SectionTitle>Recent Posts</SectionTitle>\n        <SectionContents>\n          {data.allMarkdownRemark.edges.map(({ node }) => (\n            <PostPreview key={node.id} post={node} />\n          ))}\n        </SectionContents>\n        <SectionFooter>\n          <Link to=\"/posts\">Show All Posts</Link>\n        </SectionFooter>\n      </SectionWrapper>\n    </Layout>\n  )\n}\n\nexport default IndexPage\n","import React from \"react\"\nimport styled from \"styled-components\"\nimport PropTypes from \"prop-types\"\n\nconst ContentWrapper = styled.div`\n  display: inline-block;\n  vertical-align: middle;\n  padding: 0;\n  margin: 0;\n`\n\nconst PostMetaItem = ({ icon, iconLabel, text }) => (\n  <ContentWrapper>\n    <span role=\"img\" aria-label={iconLabel}>\n      {icon}\n    </span>\n    {text}\n  </ContentWrapper>\n)\n\nPostMetaItem.propTypes = {\n  icon: PropTypes.string.isRequired,\n  iconLabel: PropTypes.string.isRequired,\n  text: PropTypes.string.isRequired,\n}\n\nexport default PostMetaItem\n"],"sourceRoot":""}