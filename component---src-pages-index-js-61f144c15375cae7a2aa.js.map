{"version":3,"sources":["webpack:///./src/components/post-preview.js","webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/site-menu.js","webpack:///./src/components/header.js","webpack:///./src/components/footer.js","webpack:///./src/components/layout.js","webpack:///./src/components/post-meta-item.js"],"names":["ContentWrapper","styled","div","withConfig","displayName","componentId","Title","h3","Excerpt","PostMetaList","PostPreview","_ref","post","formattedDate","moment","frontmatter","date","local","format","timeToRead","react_default","a","createElement","gatsby_browser_entry","to","fields","slug","title","excerpt","post_meta_item","icon","iconLabel","text","SectionWrapper","section","SectionTitle","h2","SectionContents","SectionFooter","IndexPage","data","_2007535426","layout","seo","allMarkdownRemark","edges","map","node","post_preview","key","id","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","d","__webpack_exports__","loader","enqueue","React","createContext","m","module","exports","require","default","ProdPageRenderer","location","pageResources","InternalPageRenderer","Object","assign","json","SEO","description","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","name","content","property","concat","defaultProps","List","ul","InlineListItem","li","ListItem","props","href","children","SiteMenu","site_menu_ListItem","HeaderWrapper","header","SiteInfo","SiteTitle","h1","SiteDescription","p","Header","siteTitle","site_menu","social","footer","Footer","author","footer_ContentWrapper","Date","getFullYear","Layout","_2457312135","Fragment","layout_ContentWrapper","PostMetaItem","role","aria-label"],"mappings":"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","file":"component---src-pages-index-js-61f144c15375cae7a2aa.js","sourcesContent":["import React from \"react\"\nimport { Link } from \"gatsby\"\nimport moment from \"moment\"\nimport styled from \"styled-components\"\nimport PostMetaItem from \"../components/post-meta-item\"\n\nconst ContentWrapper = styled.div`\n  margin-bottom: 0.5rem;\n  padding: 1rem;\n  background-color: #f2f2f2;\n`\n\nconst Title = styled.h3`\n  margin: 0 0 0.8rem 0;\n  padding: 0;\n  font-size: 1rem;\n  background-color: #f2f2f2;\n  & a {\n    color: #000000;\n  }\n  & a:hover {\n    color: #202c6a;\n  }\n`\n\nconst Excerpt = styled.div`\n  margin: 0;\n  padding: 0;\n  font-size: 0.8rem;\n`\n\nconst PostMetaList = styled.div`\n  margin: 0.5rem 0 0 0;\n  padding: 0.1rem 0rem;\n  text-align: right;\n  color: #333;\n  font-size: 0.7rem;\n  font-weight: light;\n`\n\nconst PostPreview = ({ post }) => {\n  const formattedDate = moment(post.frontmatter.date)\n    .local()\n    .format(`YYYY/MM/DD`)\n  const timeToRead = `${post.timeToRead} min`\n  return (\n    <ContentWrapper>\n      <Title>\n        <Link to={post.fields.slug}>{post.frontmatter.title}</Link>{\" \"}\n      </Title>\n      <Excerpt>{post.excerpt}</Excerpt>\n      <PostMetaList>\n        <PostMetaItem icon=\"🗓\" iconLabel=\"Date\" text={formattedDate} />\n        {` · `}\n        <PostMetaItem icon=\"⏱\" iconLabel=\"timeToRead\" text={timeToRead} />\n      </PostMetaList>\n    </ContentWrapper>\n  )\n}\n\nexport default PostPreview\n","import React from \"react\"\nimport { useStaticQuery, graphql, Link } from \"gatsby\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport PostPreview from \"../components/post-preview\"\nimport styled from \"styled-components\"\n\nconst SectionWrapper = styled.section`\n  margin: 0;\n  padding: 0;\n`\n\nconst SectionTitle = styled.h2`\n  margin: 0;\n  padding: 0 0 1rem 0;\n`\n\nconst SectionContents = styled.div`\n  margin: 0;\n  padding: 0;\n`\n\nconst SectionFooter = styled.div`\n  margin: 0;\n  padding: 0.5rem;\n  text-align: center;\n  font-size: 0.8rem;\n  background-color: #ffcc06;\n  & a {\n    color: #ffffff;\n  }\n`\n\nconst IndexPage = () => {\n  const data = useStaticQuery(graphql`\n    query {\n      allMarkdownRemark(\n        filter: {frontmatter: {layout: {ne: \"draft\"}}}\n        limit: 5\n        sort: { order: DESC, fields: frontmatter___date }\n      ) {\n        edges {\n          node {\n            id\n            frontmatter {\n              title\n              date\n            }\n            fields {\n              slug\n            }\n            timeToRead\n            excerpt(truncate: true)\n          }\n        }\n      }\n    }\n  `)\n  return (\n    <Layout>\n      <SEO title=\"Home\" />\n      <SectionWrapper>\n        <SectionTitle>Recent Posts</SectionTitle>\n        <SectionContents>\n          {data.allMarkdownRemark.edges.map(({ node }) => (\n            <PostPreview key={node.id} post={node} />\n          ))}\n        </SectionContents>\n        <SectionFooter>\n          <Link to=\"/posts\">Show All Posts</Link>\n        </SectionFooter>\n      </SectionWrapper>\n    </Layout>\n  )\n}\n\nexport default IndexPage\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nexport default SEO\n","import React from \"react\"\nimport styled from \"styled-components\"\n\nconst ContentWrapper = styled.div`\n  width: 100%;\n  background-color: #ffcc06;\n  padding: 0.8rem;\n  text-align: center;\n`\n\nconst List = styled.ul`\n  liststyle: none;\n  margin: 0;\n`\n\nconst InlineListItem = styled.li`\n  font-family: 'Lobster', cursive;\n  font-size: 1.2rem;\n  display: inline-block;\n  margin-bottom: 0;\n  margin-left: 1.2rem;\n  &:first-child {\n    margin-left: 0rem;\n  }\n  & a {\n    color: white;\n  }\n  & a:hover {\n    color: #202c6a;\n  }\n`\n\nconst ListItem = props => (\n  <InlineListItem>\n    <a href={props.to}>{props.children}</a>\n  </InlineListItem>\n)\n\nconst SiteMenu = () => (\n  <ContentWrapper>\n    <List>\n      <ListItem to=\"/\">Home</ListItem>\n      <ListItem to=\"/about/\">About</ListItem>\n      <ListItem to=\"/posts/\">Posts</ListItem>\n      <ListItem to=\"/tags/\">Tags</ListItem>\n    </List>\n  </ContentWrapper>\n)\n\nexport default SiteMenu\n","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport styled from \"styled-components\"\nimport PropTypes from \"prop-types\"\nimport SiteMenu from \"./site-menu\"\n\nconst HeaderWrapper = styled.header`\n  background-color: #202c6a;\n`\n\nconst SiteInfo = styled.div`\n  margin: 0 auto;\n  max-width: 960px;\n  padding: 2.5rem;\n  text-align: center;\n`\n\nconst SiteTitle = styled.h1`\n  font-family: 'Lobster', cursive;\n  margin: 0 0 0.8rem 0;\n  font-size: 2.5rem;\n  & a {\n    color: white;\n  }\n  & a:hover {\n    color: #ffcc06;\n  }\n`\n\nconst SiteDescription = styled.p`\n  color: #f2f2f2;\n  margin: 0;\n  font-size: 0.9rem;\n`\n\nconst Header = ({ siteTitle, description }) => (\n  <HeaderWrapper>\n    <SiteInfo>\n      <SiteTitle>\n        <Link to=\"/\">{siteTitle}</Link>\n      </SiteTitle>\n      <SiteDescription>{description}</SiteDescription>\n    </SiteInfo>\n    <SiteMenu />\n  </HeaderWrapper>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n  description: PropTypes.string,\n  social: PropTypes.array,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n  description: ``,\n  social: [],\n}\n\nexport default Header\n","import React from \"react\"\nimport styled from \"styled-components\"\nimport PropTypes from \"prop-types\"\n\nconst ContentWrapper = styled.footer`\n  border-top: 1px solid #EFEAF4;\n  padding-top: 0.5rem;\n  padding-bottom: 1rem;\n  text-align: center;\n  font-size: 0.8rem;\n  font-family: 'Noto Sans KR', sans-serif;\n`\n\nconst Footer = ({ author }) => (\n  <ContentWrapper>\n    © 2014-{new Date().getFullYear()} <b>{author}</b>. All rights reserved.\n    Built with\n    {` `}\n    <b>\n      <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n    </b>.\n  </ContentWrapper>\n)\n\nFooter.propTypes = {\n  author: PropTypes.string,\n}\n\nFooter.defaultProps = {\n  author: ``,\n}\n\nexport default Footer\n","import React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport styled from \"styled-components\"\nimport PropTypes from \"prop-types\"\nimport Header from \"./header\"\nimport Footer from \"./footer\"\nimport \"./layout.css\"\n\nconst ContentWrapper = styled.div`\n  margin: 0 auto;\n  max-width: 800px;\n  padding: 2rem 1rem;\n\n  & main {\n    min-height: 400;\n  }\n`\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          author\n          title\n          description\n          social {\n            name\n            url\n          }\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <Header\n        siteTitle={data.site.siteMetadata.title}\n        description={data.site.siteMetadata.description}\n        social={data.site.siteMetadata.social}\n      />\n      <ContentWrapper>\n        <main>{children}</main>\n      </ContentWrapper>\n      <Footer author={data.site.siteMetadata.author} />\n    </>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","import React from \"react\"\nimport styled from \"styled-components\"\nimport PropTypes from \"prop-types\"\n\nconst ContentWrapper = styled.div`\n  display: inline-block;\n  vertical-align: middle;\n  padding: 0;\n  margin: 0;\n`\n\nconst PostMetaItem = ({ icon, iconLabel, text }) => (\n  <ContentWrapper>\n    <span role=\"img\" aria-label={iconLabel}>\n      {icon}\n    </span>\n    {text}\n  </ContentWrapper>\n)\n\nPostMetaItem.propTypes = {\n  icon: PropTypes.string.isRequired,\n  iconLabel: PropTypes.string.isRequired,\n  text: PropTypes.string.isRequired,\n}\n\nexport default PostMetaItem\n"],"sourceRoot":""}