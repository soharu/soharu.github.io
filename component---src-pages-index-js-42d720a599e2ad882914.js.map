{"version":3,"file":"component---src-pages-index-js-42d720a599e2ad882914.js","mappings":"2IAIMA,E,KAAiBC,QAAAA,IAAAA,WAAH,0EAAGA,CAAH,oEAsBpB,IAfqB,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,UAAWC,EAApB,EAAoBA,KAApB,OACnB,gBAACJ,EAAD,KACE,wBAAMK,KAAK,MAAM,aAAYF,GAC1BD,GAEFE,K,kJCVCJ,EAAiBC,EAAAA,QAAAA,IAAAA,WAAH,uEAAGA,CAAH,iEAMdK,EAAQL,EAAAA,QAAAA,GAAAA,WAAH,8DAAGA,CAAH,wHAaLM,EAAUN,EAAAA,QAAAA,IAAAA,WAAH,gEAAGA,CAAH,0CAMPO,EAAeP,EAAAA,QAAAA,IAAAA,WAAH,qEAAGA,CAAH,6GA6BlB,EApBoB,SAAC,GAAc,IAAZQ,EAAW,EAAXA,KACfC,EAAgBC,GAAAA,CAAOF,EAAKG,YAAYC,MAC3CC,QACAC,OAFmB,kBAGhBC,EAAU,IAAOP,EAAKO,WAAZ,IAChB,OACE,gBAAChB,EAAD,KACE,gBAACM,EAAD,KACE,gBAAC,EAAAW,KAAD,CAAMC,GAAIT,EAAKU,OAAOC,MAAOX,EAAKG,YAAYS,OAAc,KAE9D,gBAACd,EAAD,KAAUE,EAAKa,SACf,gBAACd,EAAD,KACE,gBAAC,IAAD,CAAcN,KAAK,KAAKC,UAAU,OAAOC,KAAMM,IADjD,MAGE,gBAAC,IAAD,CAAcR,KAAK,IAAIC,UAAU,aAAaC,KAAMY,OC/CtDO,EAAiBtB,EAAAA,QAAAA,QAAAA,WAAH,iEAAGA,CAAH,yBAKduB,EAAevB,EAAAA,QAAAA,GAAAA,WAAH,+DAAGA,CAAH,kCAKZwB,EAAkBxB,EAAAA,QAAAA,IAAAA,WAAH,kEAAGA,CAAH,yBAKfyB,EAAgBzB,EAAAA,QAAAA,IAAAA,WAAH,gEAAGA,CAAH,8GAsDnB,EA3CkB,WAChB,IAAM0B,GAAOC,EAAAA,EAAAA,gBAAe,aAwB5B,OACE,gBAAC,IAAD,KACE,gBAAC,IAAD,CAAYP,MAAM,SAClB,gBAACE,EAAD,KACE,gBAACC,EAAD,aACA,gBAACC,EAAD,KACGE,EAAKE,kBAAkBC,MAAMC,KAAI,gBAAGC,EAAH,EAAGA,KAAH,OAChC,gBAAC,EAAD,CAAaC,IAAKD,EAAKE,GAAIzB,KAAMuB,QAGrC,gBAACN,EAAD,KACE,gBAAC,EAAAT,KAAD,CAAMC,GAAG,UAAT","sources":["webpack://soharu-gatsby-blog/./src/components/post-meta-item.js","webpack://soharu-gatsby-blog/./src/components/post-preview.js","webpack://soharu-gatsby-blog/./src/pages/index.js"],"sourcesContent":["import React from \"react\"\nimport styled from \"styled-components\"\nimport PropTypes from \"prop-types\"\n\nconst ContentWrapper = styled.div`\n  display: inline-block;\n  vertical-align: middle;\n  padding: 0;\n  margin: 0;\n`\n\nconst PostMetaItem = ({ icon, iconLabel, text }) => (\n  <ContentWrapper>\n    <span role=\"img\" aria-label={iconLabel}>\n      {icon}\n    </span>\n    {text}\n  </ContentWrapper>\n)\n\nPostMetaItem.propTypes = {\n  icon: PropTypes.string.isRequired,\n  iconLabel: PropTypes.string.isRequired,\n  text: PropTypes.string.isRequired,\n}\n\nexport default PostMetaItem\n","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport moment from \"moment\"\nimport styled from \"styled-components\"\nimport PostMetaItem from \"../components/post-meta-item\"\n\nconst ContentWrapper = styled.div`\n  margin-bottom: 0.5rem;\n  padding: 1rem;\n  background-color: #f2f2f2;\n`\n\nconst Title = styled.h3`\n  margin: 0 0 0.8rem 0;\n  padding: 0;\n  font-size: 1rem;\n  background-color: #f2f2f2;\n  & a {\n    color: #000000;\n  }\n  & a:hover {\n    color: #202c6a;\n  }\n`\n\nconst Excerpt = styled.div`\n  margin: 0;\n  padding: 0;\n  font-size: 0.8rem;\n`\n\nconst PostMetaList = styled.div`\n  margin: 0.5rem 0 0 0;\n  padding: 0.1rem 0rem;\n  text-align: right;\n  color: #333;\n  font-size: 0.7rem;\n  font-weight: light;\n`\n\nconst PostPreview = ({ post }) => {\n  const formattedDate = moment(post.frontmatter.date)\n    .local()\n    .format(` YYYYÎÖÑ MMÏõî DDÏùº`)\n  const timeToRead = ` ${post.timeToRead}Î∂Ñ`\n  return (\n    <ContentWrapper>\n      <Title>\n        <Link to={post.fields.slug}>{post.frontmatter.title}</Link>{\" \"}\n      </Title>\n      <Excerpt>{post.excerpt}</Excerpt>\n      <PostMetaList>\n        <PostMetaItem icon=\"üóì\" iconLabel=\"Date\" text={formattedDate} />\n        {` ¬∑ `}\n        <PostMetaItem icon=\"‚è±\" iconLabel=\"timeToRead\" text={timeToRead} />\n      </PostMetaList>\n    </ContentWrapper>\n  )\n}\n\nexport default PostPreview\n","import React from \"react\"\nimport { useStaticQuery, graphql, Link } from \"gatsby\"\nimport Layout from \"../components/layout\"\nimport PageHelmet from \"../components/pageHelmet\"\nimport PostPreview from \"../components/post-preview\"\nimport styled from \"styled-components\"\n\nconst SectionWrapper = styled.section`\n  margin: 0;\n  padding: 0;\n`\n\nconst SectionTitle = styled.h2`\n  margin: 0;\n  padding: 0 0 1rem 0;\n`\n\nconst SectionContents = styled.div`\n  margin: 0;\n  padding: 0;\n`\n\nconst SectionFooter = styled.div`\n  margin: 0;\n  padding: 0.5rem;\n  text-align: center;\n  font-size: 0.8rem;\n  & a {\n    color: #202c6a;\n    text-decoration: underline;\n  }\n`\n\nconst IndexPage = () => {\n  const data = useStaticQuery(graphql`\n    query {\n      allMarkdownRemark(\n        filter: {frontmatter: {layout: {ne: \"draft\"}}}\n        limit: 5\n        sort: { order: DESC, fields: frontmatter___date }\n      ) {\n        edges {\n          node {\n            id\n            frontmatter {\n              title\n              date\n            }\n            fields {\n              slug\n            }\n            timeToRead\n            excerpt(truncate: true)\n          }\n        }\n      }\n    }\n  `)\n  return (\n    <Layout>\n      <PageHelmet title=\"Home\" />\n      <SectionWrapper>\n        <SectionTitle>ÏµúÏã† Í∏Ä</SectionTitle>\n        <SectionContents>\n          {data.allMarkdownRemark.edges.map(({ node }) => (\n            <PostPreview key={node.id} post={node} />\n          ))}\n        </SectionContents>\n        <SectionFooter>\n          <Link to=\"/posts\">Îã§Î•∏ Í∏Ä Îçî Î≥¥Í∏∞</Link>\n        </SectionFooter>\n      </SectionWrapper>\n    </Layout>\n  )\n}\n\nexport default IndexPage\n"],"names":["ContentWrapper","styled","icon","iconLabel","text","role","Title","Excerpt","PostMetaList","post","formattedDate","moment","frontmatter","date","local","format","timeToRead","Link","to","fields","slug","title","excerpt","SectionWrapper","SectionTitle","SectionContents","SectionFooter","data","useStaticQuery","allMarkdownRemark","edges","map","node","key","id"],"sourceRoot":""}