{"version":3,"file":"component---src-pages-posts-js-34143cf089a11594a1f8.js","mappings":"+KAMMA,EAAiBC,EAAAA,QAAAA,QAAAA,WAAH,6EAAGA,CAAH,qEASdC,EAAeD,EAAAA,QAAAA,GAAAA,WAAH,2EAAGA,CAAH,yFAWZE,EAAeF,EAAAA,QAAAA,IAAAA,WAAH,2EAAGA,CAAH,gCAKZG,EAAWH,EAAAA,QAAAA,IAAAA,WAAH,uEAAGA,CAAH,yJAURI,EAAYJ,EAAAA,QAAAA,IAAAA,WAAH,wEAAGA,CAAH,gGAWTK,EAAkB,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,MAE1BC,GADQD,EAAME,OACMH,EAAN,KACpB,OACE,gBAACP,EAAD,KACE,gBAACE,EAAD,KAAeO,GACdD,EAAMG,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACNC,EAAgBC,GAAAA,CAAOF,EAAKG,YAAYC,MAC3CC,QACAC,OAFmB,iBAGtB,OACE,gBAACf,EAAD,CAAcgB,IAAKP,EAAKQ,IACtB,gBAAChB,EAAD,KAAWS,GACX,gBAACR,EAAD,KACE,gBAAC,EAAAgB,KAAD,CAAMC,GAAIV,EAAKW,OAAOC,MAAOZ,EAAKG,YAAYR,cA2B5DD,EAAgBmB,aAAe,CAC7BlB,MAAM,GACNC,MAAO,IAGT,O,4FClDA,UA1CkB,WAChB,IAAMkB,GAAOC,EAAAA,EAAAA,gBAAe,cAsBtBC,EAAQF,EAAKlB,MAAMqB,MAAMlB,KAAI,qBAAGC,KAAgBG,YAAYe,QAC5DC,GAAW,OAAO,IAAIC,IAAIJ,IAC1BK,EAAc,GAOpB,OANAF,EAAYG,SAAQ,SAAAJ,GAClBG,EAAYH,GAAQJ,EAAKlB,MAAMqB,MAAMM,QACnC,qBAAGvB,KAAgBG,YAAYe,OAASA,QAK1C,gBAAC,IAAD,KACE,gBAAC,IAAD,CAAYvB,MAAM,UACjBwB,EAAYpB,KAAI,SAAAmB,GAAI,OACnB,gBAAC,IAAD,CAAiBX,IAAKW,EAAMvB,MAAOuB,EAAMtB,MAAOyB,EAAYH","sources":["webpack://soharu-gatsby-blog/./src/components/post-list-section.js","webpack://soharu-gatsby-blog/./src/pages/posts.js"],"sourcesContent":["import React from \"react\"\nimport { Link } from \"gatsby\"\nimport moment from \"moment\"\nimport PropTypes from \"prop-types\"\nimport styled from \"styled-components\"\n\nconst SectionWrapper = styled.section`\n  margin: 0 0 1.5rem 0;\n  padding: 0;\n\n  &:last-child {\n    margin-bottom: 1rem;\n  }\n`\n\nconst SectionTitle = styled.h2`\n  margin: 0;\n  padding: 0 0 1rem 0;\n\n  & span {\n    font-weight: lighter;\n    color: red;\n    font-size: 0.8rem;\n  }\n`\n\nconst PostListItem = styled.div`\n  margin: 0;\n  padding: 0.1rem 0;\n`\n\nconst PostDate = styled.div`\n  display: inline-block;\n  vertical-align: middle;\n  margin: 0;\n  padding-right: 1rem;\n  border-radius: 0.2rem;\n  font-size: 0.8rem;\n  font-family: 'Noto Sans KR', sans-serif;\n`\n\nconst PostTitle = styled.div`\n  display: inline-block;\n  vertical-align: middle;\n  margin: 0;\n  padding: 0 0 0 0.5rem;\n\n  & a {\n    color: black;\n  }\n`\n\nconst PostListSection = ({ title, posts }) => {\n  const count = posts.length\n  const titleWithCount = `${title}년`\n  return (\n    <SectionWrapper>\n      <SectionTitle>{titleWithCount}</SectionTitle>\n      {posts.map(({ node }) => {\n        const formattedDate = moment(node.frontmatter.date)\n          .local()\n          .format(`YYYY년 MM월 DD일`)\n        return (\n          <PostListItem key={node.id}>\n            <PostDate>{formattedDate}</PostDate>\n            <PostTitle>\n              <Link to={node.fields.slug}>{node.frontmatter.title}</Link>\n            </PostTitle>\n          </PostListItem>\n        )\n      })}\n    </SectionWrapper>\n  )\n}\n\nPostListSection.propTypes = {\n  title: PropTypes.string,\n  posts: PropTypes.arrayOf(\n    PropTypes.shape({\n      node: PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        frontmatter: PropTypes.shape({\n          title: PropTypes.string.isRequired,\n          date: PropTypes.string.isRequired,\n        }),\n        fields: PropTypes.shape({\n          slug: PropTypes.string.isRequired,\n        }),\n      }),\n    }).isRequired\n  ),\n}\n\nPostListSection.defaultProps = {\n  title: ``,\n  posts: [],\n}\n\nexport default PostListSection\n","import React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport Layout from \"../components/layout\"\nimport PageHelmet from \"../components/pageHelmet\"\nimport PostListSection from \"../components/post-list-section\"\n\nconst PostsPage = () => {\n  const data = useStaticQuery(graphql`\n    query {\n      posts: allMarkdownRemark(\n        filter: {frontmatter: {layout: {ne: \"draft\"}}}\n        sort: { order: DESC, fields: frontmatter___date }\n      ) {\n        edges {\n          node {\n            id\n            frontmatter {\n              title\n              date\n              year: date(formatString: \"YYYY\")\n            }\n            fields {\n              slug\n            }\n          }\n        }\n      }\n    }\n  `)\n  const years = data.posts.edges.map(({ node }) => node.frontmatter.year)\n  const uniqueYears = [...new Set(years)]\n  const postsInYear = {}\n  uniqueYears.forEach(year => {\n    postsInYear[year] = data.posts.edges.filter(\n      ({ node }) => node.frontmatter.year === year\n    )\n  })\n\n  return (\n    <Layout>\n      <PageHelmet title=\"Posts\" />\n      {uniqueYears.map(year => (\n        <PostListSection key={year} title={year} posts={postsInYear[year]} />\n      ))}\n    </Layout>\n  )\n}\n\nexport default PostsPage\n"],"names":["SectionWrapper","styled","SectionTitle","PostListItem","PostDate","PostTitle","PostListSection","title","posts","titleWithCount","length","map","node","formattedDate","moment","frontmatter","date","local","format","key","id","Link","to","fields","slug","defaultProps","data","useStaticQuery","years","edges","year","uniqueYears","Set","postsInYear","forEach","filter"],"sourceRoot":""}