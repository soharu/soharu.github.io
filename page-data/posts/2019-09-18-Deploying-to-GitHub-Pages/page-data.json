{"componentChunkName":"component---src-templates-blog-post-js","path":"/posts/2019-09-18-Deploying-to-GitHub-Pages/","webpackCompilationHash":"bb44aab4c4911919af17","result":{"data":{"currentPost":{"html":"<p><a href=\"https://soharu.github.io/posts/2014-01-25-first-step/\">처음 Jekyll로 블로그를 만들었을 때는</a> 공개 저장소인 <a href=\"https://github.com/soharu/soharu.github.io\">soharu.github.io</a>로 블로그를 호스팅했다.</p>\n<p><a href=\"https://soharu.github.io/posts/2017-10-03-jekyll-to-docpad/\">DocPad로 이전했을 때는</a> 별도 저장소를 두고 <a href=\"https://www.npmjs.com/package/gh-pages\">gh-pages</a>를 이용하여 생성된 파일을 <a href=\"https://github.com/soharu/soharu.github.io\">soharu.github.io</a>로 배포하였다. Jekyll 처럼 정적 페이지를 생성하는데 GitHub의 직접적인 지원을 받을 수 없기 때문에 별도 배포 과정이 필요했던 것 같다.</p>\n<p>때문에 자연스럽게 블로그의 소스 저장소와 배포 저장소를 분리하게 되었는데 이때 블로그의 소스 저장소는 비공개로 두었다. 덕분에 비공개 저장소에서 맘 편하게 블로그 디자인을 개선하거나 블로그 초안을 작성하고 내용을 다듬어 적절한 시점에 배포하는 것이 가능했다</p>\n<p>물론 초안 기능을 <a href=\"https://jekyllrb-ko.github.io/docs/drafts/\">Jekyll도 제공</a>하지만 공개 저장소에 있으면 저장소로 직접 들어와서 볼 수 있다. 비공개 저장소를 GitHub Pages로 퍼블리싱하는 것도 가능하지만 <a href=\"https://help.github.com/en/articles/githubs-products#github-pro\">돈이 든다</a>.</p>\n<p>Gatsby에서도 DocPad와 마찬가지로 gh-pages를 이용하여 사이트를 배포하기 때문에 분리된 저장소로 관리하는 이점을 누릴 수 있다.</p>\n<p><a href=\"https://www.gatsbyjs.org/docs/how-gatsby-works-with-github-pages/\">How Gatsby Works with GitHub Pages</a>를 보면 GitHub Pages 옵션에 따라 deploy 명령을 설정하는 방법이 나와있다.</p>\n<p>다만 해당 문서에서는 블로그 소스와 생성된 데이터가 같은 저장소에 있는 것을 가정하고 있는데 나는 앞서 말한 바와 같이 소스 저장소(비공개)와 배포 저장소(공개)가 분리되어 있는 상황이었다.</p>\n<p>다행히 gh-pages에서 관련 옵션을 제공하고 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\">$ gh-pages --help\nUsage: gh-pages [options]\n\nOptions:\n  -V, --version            output the version number\n  -d, --dist &lt;dist&gt;        Base directory for all source files\n  -s, --src &lt;src&gt;          Pattern used to select which files to publish (default: &quot;**/*&quot;)\n  -b, --branch &lt;branch&gt;    Name of the branch you are pushing to (default: &quot;gh-pages&quot;)\n  -e, --dest &lt;dest&gt;        Target directory within the destination branch (relative to the root) (default: &quot;.&quot;)\n  -a, --add                Only add, and never remove existing files\n  -x, --silent             Do not output the repository url\n  -m, --message &lt;message&gt;  commit message (default: &quot;Updates&quot;)\n  -g, --tag &lt;tag&gt;          add tag to commit\n  --git &lt;git&gt;              Path to git executable (default: &quot;git&quot;)\n  -t, --dotfiles           Include dotfiles\n  -r, --repo &lt;repo&gt;        URL of the repository you are pushing to\n  -p, --depth &lt;depth&gt;      depth for clone (default: 1)\n  -o, --remote &lt;name&gt;      The name of the remote (default: &quot;origin&quot;)\n  -u, --user &lt;address&gt;     The name and email of the user (defaults to the git config).  Format is &quot;Your Name &lt;email@example.com&gt;&quot;.\n  -v, --remove &lt;pattern&gt;   Remove files that match the given pattern (ignored if used together with --add). (default: &quot;.&quot;)\n  -n, --no-push            Commit only (with no push)\n  -h, --help               output usage information</code></pre></div>\n<p><code class=\"language-text\">-r</code> 옵션을 이용하여 사이트를 호스팅할 저장소를 지정할 수 있다.</p>\n<p>다음과 같이 <code class=\"language-text\">deploy</code> 명령을 설정하면 원하는 저장소로 블로그 배포가 가능하다.</p>\n<div class=\"gatsby-code-title\">package.json</div>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"scripts\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"deploy\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"gatsby build &amp;&amp; gh-pages -d public -r git@github.com:soharu/soharu.github.io.git -b master\"</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","frontmatter":{"title":"Github Pages로 블로그 배포하기","date":"2019-09-18 22:30:00+0900","tags":["housekeeping","GatsbyJS"]},"timeToRead":2},"nextPost":{"frontmatter":{"title":"내집마련 해커톤 후기"},"fields":{"slug":"/posts/2019-09-22-Hackathon-for-My-Own-Blog/"}},"previousPost":{"frontmatter":{"title":"레이아웃과 스타일링"},"fields":{"slug":"/posts/2019-09-17-Layout-and-Styling-in-Gatsby/"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/posts/2019-09-18-Deploying-to-GitHub-Pages/","nextSlug":"/posts/2019-09-22-Hackathon-for-My-Own-Blog/","previousSlug":"/posts/2019-09-17-Layout-and-Styling-in-Gatsby/"}}}