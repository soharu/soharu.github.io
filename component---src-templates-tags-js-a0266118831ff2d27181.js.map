{"version":3,"sources":["webpack:///./src/templates/tags.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/site-menu.js","webpack:///./src/components/header.js","webpack:///./src/components/footer.js","webpack:///./src/components/layout.js","webpack:///./src/components/post-list-section.js"],"names":["__webpack_require__","r","__webpack_exports__","d","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby__WEBPACK_IMPORTED_MODULE_1__","_components_layout__WEBPACK_IMPORTED_MODULE_2__","_components_seo__WEBPACK_IMPORTED_MODULE_3__","_components_post_list_section__WEBPACK_IMPORTED_MODULE_4__","SectionFooter","styled","div","withConfig","displayName","componentId","Tags","_ref","pageContext","data","tag","edges","allMarkdownRemark","title","a","createElement","posts","to","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","loader","enqueue","React","createContext","m","module","exports","require","default","ProdPageRenderer","location","pageResources","InternalPageRenderer","Object","assign","json","SEO","description","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","name","content","property","concat","defaultProps","ContentWrapper","List","ul","InlineListItem","li","ListItem","props","react_default","href","children","SiteMenu","site_menu_ListItem","HeaderWrapper","header","SiteInfo","SiteTitle","h1","SiteDescription","p","Header","siteTitle","gatsby_browser_entry","site_menu","social","footer","Footer","author","footer_ContentWrapper","Date","getFullYear","Layout","_2457312135","Fragment","layout_ContentWrapper","styled_components__WEBPACK_IMPORTED_MODULE_2__","SectionWrapper","section","SectionTitle","h2","PostListItem","PostDate","PostTitle","PostListSection","count","length","titleWithCount","map","_ref2","node","key","id","frontmatter","date","fields","slug"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,8BAAAE,IAAA,IAAAC,EAAAL,EAAA,GAAAM,EAAAN,EAAAO,EAAAF,GAAAG,EAAAR,EAAA,KAAAS,EAAAT,EAAA,KAAAU,EAAAV,EAAA,KAAAW,EAAAX,EAAA,KAQMY,EARNZ,EAAA,KAQsBa,EAAOC,IAAVC,WAAA,CAAAC,YAAA,sBAAAC,YAAA,YAAGJ,CAAH,oFAkDJK,UAxCF,SAAAC,GAA2B,IAAxBC,EAAwBD,EAAxBC,YAAaC,EAAWF,EAAXE,KACnBC,EAAQF,EAARE,IACAC,EAAUF,EAAKG,kBAAfD,MACFE,EAAK,gBAAmBH,EAAnB,IAEX,OACEhB,EAAAoB,EAAAC,cAAClB,EAAA,EAAD,KACEH,EAAAoB,EAAAC,cAACjB,EAAA,EAAD,CAAKe,MAAOA,IACZnB,EAAAoB,EAAAC,cAAChB,EAAA,EAAD,CAAiBc,MAAOA,EAAOG,MAAOL,IACtCjB,EAAAoB,EAAAC,cAACf,EAAD,KACEN,EAAAoB,EAAAC,cAACnB,EAAA,EAAD,CAAMqB,GAAG,SAAT,oBAgCD,IAAMzB,EAAS,+CC5DtB,IAAAC,EAAAL,EAAA,GAAAM,EAAAN,EAAAO,EAAAF,GAAAyB,EAAA9B,EAAA,IAAA+B,EAAA/B,EAAAO,EAAAuB,GAAA9B,EAAAG,EAAAD,EAAA,sBAAA6B,EAAAL,IAAA1B,EAAA,KAAAA,EAAA,GAcyBgC,QAAOC,QAELC,IAAMC,cAAc,yBChB/C,IAAsBC,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,kUCsBhCK,UAjBU,SAAAtB,GAAiC,IAA9BuB,EAA8BvB,EAA9BuB,SAAUC,EAAoBxB,EAApBwB,cACpC,OAAKA,EAGET,IAAMP,cAAciB,IAApBC,OAAAC,OAAA,CACLJ,WACAC,iBACGA,EAAcI,OALV,uFCKX,SAASC,EAAT7B,GAAiD,IAAlC8B,EAAkC9B,EAAlC8B,YAAaC,EAAqB/B,EAArB+B,KAAMC,EAAehC,EAAfgC,KAAM1B,EAASN,EAATM,MAC9B2B,EADuCC,EAAAhC,KACvC+B,KAcFE,EAAkBL,GAAeG,EAAKG,aAAaN,YAEzD,OACEO,EAAA9B,EAAAC,cAAC8B,EAAA/B,EAAD,CACEgC,eAAgB,CACdR,QAEFzB,MAAOA,EACPkC,cAAa,QAAUP,EAAKG,aAAa9B,MACzC0B,KAAM,CACJ,CACES,KAAI,cACJC,QAASP,GAEX,CACEQ,SAAQ,WACRD,QAASpC,GAEX,CACEqC,SAAQ,iBACRD,QAASP,GAEX,CACEQ,SAAQ,UACRD,QAAO,YAETE,OAAOZ,KAYfH,EAAIgB,aAAe,CACjBd,KAAI,KACJC,KAAM,GACNF,YAAW,IAGED,qNCpETiB,EAAiBpD,IAAOC,IAAVC,WAAA,CAAAC,YAAA,4BAAAC,YAAA,gBAAGJ,CAAH,2EAOdqD,EAAOrD,IAAOsD,GAAVpD,WAAA,CAAAC,YAAA,kBAAAC,YAAA,gBAAGJ,CAAH,8BAKJuD,EAAiBvD,IAAOwD,GAAVtD,WAAA,CAAAC,YAAA,4BAAAC,YAAA,gBAAGJ,CAAH,wIAedyD,EAAW,SAAAC,GAAK,OACpBC,EAAA9C,EAAAC,cAACyC,EAAD,KACEI,EAAA9C,EAAAC,cAAA,KAAG8C,KAAMF,EAAM1C,IAAK0C,EAAMG,YAefC,EAXE,kBACfH,EAAA9C,EAAAC,cAACsC,EAAD,KACEO,EAAA9C,EAAAC,cAACuC,EAAD,KACEM,EAAA9C,EAAAC,cAACiD,EAAD,CAAU/C,GAAG,KAAb,QACA2C,EAAA9C,EAAAC,cAACiD,EAAD,CAAU/C,GAAG,WAAb,SACA2C,EAAA9C,EAAAC,cAACiD,EAAD,CAAU/C,GAAG,WAAb,SACA2C,EAAA9C,EAAAC,cAACiD,EAAD,CAAU/C,GAAG,UAAb,WCpCAgD,EAAgBhE,IAAOiE,OAAV/D,WAAA,CAAAC,YAAA,wBAAAC,YAAA,eAAGJ,CAAH,+BAIbkE,EAAWlE,IAAOC,IAAVC,WAAA,CAAAC,YAAA,mBAAAC,YAAA,eAAGJ,CAAH,qEAORmE,EAAYnE,IAAOoE,GAAVlE,WAAA,CAAAC,YAAA,oBAAAC,YAAA,eAAGJ,CAAH,yFAWTqE,EAAkBrE,IAAOsE,EAAVpE,WAAA,CAAAC,YAAA,0BAAAC,YAAA,eAAGJ,CAAH,8CAMfuE,EAAS,SAAAjE,GAAA,IAAGkE,EAAHlE,EAAGkE,UAAWpC,EAAd9B,EAAc8B,YAAd,OACbuB,EAAA9C,EAAAC,cAACkD,EAAD,KACEL,EAAA9C,EAAAC,cAACoD,EAAD,KACEP,EAAA9C,EAAAC,cAACqD,EAAD,KACER,EAAA9C,EAAAC,cAAC2D,EAAA,EAAD,CAAMzD,GAAG,KAAKwD,IAEhBb,EAAA9C,EAAAC,cAACuD,EAAD,KAAkBjC,IAEpBuB,EAAA9C,EAAAC,cAAC4D,EAAD,QAUJH,EAAOpB,aAAe,CACpBqB,UAAS,GACTpC,YAAW,GACXuC,OAAQ,IAGKJ,QCtDTnB,EAAiBpD,IAAO4E,OAAV1E,WAAA,CAAAC,YAAA,yBAAAC,YAAA,YAAGJ,CAAH,6GAQd6E,EAAS,SAAAvE,GAAA,IAAGwE,EAAHxE,EAAGwE,OAAH,OACbnB,EAAA9C,EAAAC,cAACiE,EAAD,gBACU,IAAIC,MAAOC,cADrB,IACoCtB,EAAA9C,EAAAC,cAAA,SAAIgE,GADxC,wCAIEnB,EAAA9C,EAAAC,cAAA,SACE6C,EAAA9C,EAAAC,cAAA,KAAG8C,KAAK,4BAAR,WALJ,MAcFiB,EAAO1B,aAAe,CACpB2B,OAAM,IAGOD,QCvBTzB,UAAiBpD,IAAOC,IAAVC,WAAA,CAAAC,YAAA,yBAAAC,YAAA,gBAAGJ,CAAH,8EA8CLkF,IApCA,SAAA5E,GAAkB,IAAfuD,EAAevD,EAAfuD,SACVrD,EAAI2E,EAAA3E,KAgBV,OACEmD,EAAA9C,EAAAC,cAAA6C,EAAA9C,EAAAuE,SAAA,KACEzB,EAAA9C,EAAAC,cAACmD,EAAD,CACEO,UAAWhE,EAAK+B,KAAKG,aAAa9B,MAClCwB,YAAa5B,EAAK+B,KAAKG,aAAaN,YACpCuC,OAAQnE,EAAK+B,KAAKG,aAAaiC,SAEjChB,EAAA9C,EAAAC,cAACuE,EAAD,KACE1B,EAAA9C,EAAAC,cAAA,YAAO+C,IAETF,EAAA9C,EAAAC,cAAC8D,EAAD,CAAQE,OAAQtE,EAAK+B,KAAKG,aAAaoC,6CC7C7C,IAAAtF,EAAAL,EAAA,GAAAM,EAAAN,EAAAO,EAAAF,GAAAG,EAAAR,EAAA,KAAAmG,EAAAnG,EAAA,KAKMoG,EAAiBvF,IAAOwF,QAAVtF,WAAA,CAAAC,YAAA,oCAAAC,YAAA,gBAAGJ,CAAH,qEASdyF,EAAezF,IAAO0F,GAAVxF,WAAA,CAAAC,YAAA,kCAAAC,YAAA,gBAAGJ,CAAH,yFAWZ2F,EAAe3F,IAAOC,IAAVC,WAAA,CAAAC,YAAA,kCAAAC,YAAA,gBAAGJ,CAAH,gCAKZ4F,EAAW5F,IAAOC,IAAVC,WAAA,CAAAC,YAAA,8BAAAC,YAAA,gBAAGJ,CAAH,iLAYR6F,EAAY7F,IAAOC,IAAVC,WAAA,CAAAC,YAAA,+BAAAC,YAAA,gBAAGJ,CAAH,gGAWT8F,EAAkB,SAAAxF,GAAsB,IAAnBM,EAAmBN,EAAnBM,MAAOG,EAAYT,EAAZS,MAC1BgF,EAAQhF,EAAMiF,OACdC,EAAoBrF,EAAN,MAAiBmF,EAAjB,SAAwC,IAAVA,EAAc,GAAK,KACrE,OACEtG,EAAAoB,EAAAC,cAACyE,EAAD,KACE9F,EAAAoB,EAAAC,cAAC2E,EAAD,KAAeQ,GACdlF,EAAMmF,IAAI,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,KAAH,OACT3G,EAAAoB,EAAAC,cAAC6E,EAAD,CAAcU,IAAKD,EAAKE,IACtB7G,EAAAoB,EAAAC,cAAC8E,EAAD,KAAWQ,EAAKG,YAAYC,MAC5B/G,EAAAoB,EAAAC,cAAC+E,EAAD,KACEpG,EAAAoB,EAAAC,cAACnB,EAAA,EAAD,CAAMqB,GAAIoF,EAAKK,OAAOC,MAAON,EAAKG,YAAY3F,aA0B1DkF,EAAgB3C,aAAe,CAC7BvC,MAAK,GACLG,MAAO,IAGM+E","file":"component---src-templates-tags-js-a0266118831ff2d27181.js","sourcesContent":["import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport PostListSection from \"../components/post-list-section\"\nimport styled from \"styled-components\"\n\nconst SectionFooter = styled.div`\n  margin: 0;\n  padding: 0;\n  font-size: 0.8rem;\n  & a {\n    color: #000;\n    text-decoration: underline;\n  }\n`\n\nconst Tags = ({ pageContext, data }) => {\n  const { tag } = pageContext\n  const { edges } = data.allMarkdownRemark\n  const title = `Tagged with \"${tag}\"`\n\n  return (\n    <Layout>\n      <SEO title={title} />\n      <PostListSection title={title} posts={edges} />\n      <SectionFooter>\n        <Link to=\"/tags\">Show All Tags</Link>\n      </SectionFooter>\n    </Layout>\n  )\n}\n\nTags.propTypes = {\n  pageContext: PropTypes.shape({\n    tag: PropTypes.string.isRequired,\n  }),\n  data: PropTypes.shape({\n    allMarkdownRemark: PropTypes.shape({\n      edges: PropTypes.arrayOf(\n        PropTypes.shape({\n          node: PropTypes.shape({\n            id: PropTypes.string.isRequired,\n            frontmatter: PropTypes.shape({\n              title: PropTypes.string.isRequired,\n              date: PropTypes.string.isRequired,\n            }),\n            fields: PropTypes.shape({\n              slug: PropTypes.string.isRequired,\n            }),\n          }),\n        }).isRequired\n      ),\n    }),\n  }),\n}\n\nexport default Tags\n\nexport const pageQuery = graphql`\n  query($tag: String) {\n    allMarkdownRemark(\n      limit: 2000\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { tags: { in: [$tag] } } }\n    ) {\n      edges {\n        node {\n          id\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            date(formatString: \"DD MMM\")\n          }\n        }\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nexport default SEO\n","import React from \"react\"\nimport styled from \"styled-components\"\n\nconst ContentWrapper = styled.div`\n  width: 100%;\n  background-color: #ffcc06;\n  padding: 0.5rem;\n  text-align: center;\n`\n\nconst List = styled.ul`\n  liststyle: none;\n  margin: 0;\n`\n\nconst InlineListItem = styled.li`\n  display: inline-block;\n  margin-bottom: 0;\n  margin-left: 0.8rem;\n  &:first-child {\n    margin-left: 0rem;\n  }\n  & a {\n    color: white;\n  }\n  & a:hover {\n    color: #202c6a;\n  }\n`\n\nconst ListItem = props => (\n  <InlineListItem>\n    <a href={props.to}>{props.children}</a>\n  </InlineListItem>\n)\n\nconst SiteMenu = () => (\n  <ContentWrapper>\n    <List>\n      <ListItem to=\"/\">Home</ListItem>\n      <ListItem to=\"/about/\">About</ListItem>\n      <ListItem to=\"/posts/\">Posts</ListItem>\n      <ListItem to=\"/tags/\">Tags</ListItem>\n    </List>\n  </ContentWrapper>\n)\n\nexport default SiteMenu\n","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport styled from \"styled-components\"\nimport PropTypes from \"prop-types\"\nimport SiteMenu from \"./site-menu\"\n\nconst HeaderWrapper = styled.header`\n  background-color: #202c6a;\n`\n\nconst SiteInfo = styled.div`\n  margin: 0 auto;\n  max-width: 960px;\n  padding: 2.5rem;\n  text-align: center;\n`\n\nconst SiteTitle = styled.h1`\n  display: inline-block;\n  margin: 0 0 0.8rem 0;\n  & a {\n    color: white;\n  }\n  & a:hover {\n    color: #ffcc06;\n  }\n`\n\nconst SiteDescription = styled.p`\n  color: #f2f2f2;\n  margin: 0;\n  font-size: 0.8rem;\n`\n\nconst Header = ({ siteTitle, description }) => (\n  <HeaderWrapper>\n    <SiteInfo>\n      <SiteTitle>\n        <Link to=\"/\">{siteTitle}</Link>\n      </SiteTitle>\n      <SiteDescription>{description}</SiteDescription>\n    </SiteInfo>\n    <SiteMenu />\n  </HeaderWrapper>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n  description: PropTypes.string,\n  social: PropTypes.array,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n  description: ``,\n  social: [],\n}\n\nexport default Header\n","import React from \"react\"\nimport styled from \"styled-components\"\nimport PropTypes from \"prop-types\"\n\nconst ContentWrapper = styled.footer`\n  border-top: 1px solid #EFEAF4;\n  padding-top: 0.5rem;\n  padding-bottom: 1rem;\n  text-align: center;\n  font-size: 0.8rem;\n`\n\nconst Footer = ({ author }) => (\n  <ContentWrapper>\n    © 2014-{new Date().getFullYear()} <b>{author}</b>. All rights reserved.\n    Built with\n    {` `}\n    <b>\n      <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n    </b>.\n  </ContentWrapper>\n)\n\nFooter.propTypes = {\n  author: PropTypes.string,\n}\n\nFooter.defaultProps = {\n  author: ``,\n}\n\nexport default Footer\n","import React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport styled from \"styled-components\"\nimport PropTypes from \"prop-types\"\nimport Header from \"./header\"\nimport Footer from \"./footer\"\nimport \"./layout.css\"\n\nconst ContentWrapper = styled.div`\n  margin: 0 auto;\n  max-width: 800px;\n  padding: 2rem 1rem;\n\n  & main {\n    min-height: 400;\n  }\n`\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          author\n          title\n          description\n          social {\n            name\n            url\n          }\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <Header\n        siteTitle={data.site.siteMetadata.title}\n        description={data.site.siteMetadata.description}\n        social={data.site.siteMetadata.social}\n      />\n      <ContentWrapper>\n        <main>{children}</main>\n      </ContentWrapper>\n      <Footer author={data.site.siteMetadata.author} />\n    </>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport styled from \"styled-components\"\n\nconst SectionWrapper = styled.section`\n  margin: 0 0 1.5rem 0;\n  padding: 0;\n\n  &:last-child {\n    margin-bottom: 1rem;\n  }\n`\n\nconst SectionTitle = styled.h2`\n  margin: 0;\n  padding: 0 0 1rem 0;\n\n  & span {\n    font-weight: lighter;\n    color: red;\n    font-size: 0.8rem;\n  }\n`\n\nconst PostListItem = styled.div`\n  margin: 0;\n  padding: 0.1rem 0;\n`\n\nconst PostDate = styled.div`\n  display: inline-block;\n  vertical-align: middle;\n  margin: 0;\n  padding: 0.1rem 1.5rem;\n  background-color: #ffcc06;\n  border-radius: 0.2rem;\n  color: white;\n  font-family: monospace;\n  font-weight: bold;\n`\n\nconst PostTitle = styled.div`\n  display: inline-block;\n  vertical-align: middle;\n  margin: 0;\n  padding: 0 0 0 0.5rem;\n\n  & a {\n    color: black;\n  }\n`\n\nconst PostListSection = ({ title, posts }) => {\n  const count = posts.length\n  const titleWithCount = `${title} / ${count} post${count === 1 ? \"\" : \"s\"}`\n  return (\n    <SectionWrapper>\n      <SectionTitle>{titleWithCount}</SectionTitle>\n      {posts.map(({ node }) => (\n        <PostListItem key={node.id}>\n          <PostDate>{node.frontmatter.date}</PostDate>\n          <PostTitle>\n            <Link to={node.fields.slug}>{node.frontmatter.title}</Link>\n          </PostTitle>\n        </PostListItem>\n      ))}\n    </SectionWrapper>\n  )\n}\n\nPostListSection.propTypes = {\n  title: PropTypes.string,\n  posts: PropTypes.arrayOf(\n    PropTypes.shape({\n      node: PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        frontmatter: PropTypes.shape({\n          title: PropTypes.string.isRequired,\n          date: PropTypes.string.isRequired,\n        }),\n        fields: PropTypes.shape({\n          slug: PropTypes.string.isRequired,\n        }),\n      }),\n    }).isRequired\n  ),\n}\n\nPostListSection.defaultProps = {\n  title: ``,\n  posts: [],\n}\n\nexport default PostListSection\n"],"sourceRoot":""}