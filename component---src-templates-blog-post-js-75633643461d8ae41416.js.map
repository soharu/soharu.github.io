{"version":3,"sources":["webpack:///./src/templates/blog-post.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/site-menu.js","webpack:///./src/components/notice.js","webpack:///./src/components/header.js","webpack:///./src/components/footer.js","webpack:///./src/components/layout.js"],"names":["__webpack_require__","r","__webpack_exports__","d","query","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_1__","_components_seo__WEBPACK_IMPORTED_MODULE_2__","_ref","post","data","markdownRemark","a","createElement","title","frontmatter","style","color","marginBottom","date","dangerouslySetInnerHTML","__html","html","m","module","exports","require","default","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","loader","enqueue","React","createContext","ProdPageRenderer","location","pageResources","InternalPageRenderer","Object","assign","json","SEO","description","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","name","content","property","concat","defaultProps","ContentWrapper","styled","div","withConfig","displayName","componentId","List","ul","InlineListItem","li","ListItem","props","react_default","href","to","children","SiteMenu","site_menu_ListItem","NoticeWrapper","Title","h5","Description","span","Notice","emoji","role","aria-label","siteTitle","HeaderWrapper","header","SiteInfo","SiteTitle","h1","SiteDescription","p","Header","gatsby_browser_entry","site_menu","notice","social","footer","Footer","author","footer_ContentWrapper","Date","getFullYear","Layout","_2457312135","Fragment","margin","maxWidth","padding","paddingTop","minHeight"],"mappings":"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","file":"component---src-templates-blog-post-js-75633643461d8ae41416.js","sourcesContent":["import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport \"katex/dist/katex.min.css\"\n\nexport default ({ data }) => {\n  const post = data.markdownRemark\n  return (\n    <Layout>\n      <SEO title={post.frontmatter.title} />\n      <div>\n        <h1>{post.frontmatter.title}</h1>\n        <div\n          style={{\n            color: `#bbb`,\n            marginBottom: `1rem`,\n          }}\n        >\n          {post.frontmatter.date}\n        </div>\n        <div dangerouslySetInnerHTML={{ __html: post.html }} />\n      </div>\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      frontmatter {\n        title\n        date(formatString: \"DD MMMM, YYYY\")\n      }\n    }\n  }\n`\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nexport default SEO\n","import React from \"react\"\nimport styled from \"styled-components\"\n\nconst ContentWrapper = styled.div`\n  width: 100%;\n  background-color: #ffcc06;\n  padding: 0.5rem;\n  text-align: center;\n`\n\nconst List = styled.ul`\n  liststyle: none;\n  margin: 0;\n`\n\nconst InlineListItem = styled.li`\n  display: inline-block;\n  margin-bottom: 0;\n  margin-left: 0.8rem;\n  &:first-child {\n    margin-left: 0rem;\n  }\n  & a {\n    color: white;\n  }\n  & a:hover {\n    color: #202c6a;\n  }\n`\n\nconst ListItem = props => (\n  <InlineListItem>\n    <a href={props.to}>{props.children}</a>\n  </InlineListItem>\n)\n\nconst SiteMenu = () => (\n  <ContentWrapper>\n    <List>\n      <ListItem to=\"/\">Home</ListItem>\n      <ListItem to=\"/about/\">About</ListItem>\n      <ListItem to=\"/posts/\">Posts</ListItem>\n      <ListItem to=\"/tags/\">Tags</ListItem>\n    </List>\n  </ContentWrapper>\n)\n\nexport default SiteMenu\n","import React from \"react\"\nimport styled from \"styled-components\"\nimport PropTypes from \"prop-types\"\n\nconst NoticeWrapper = styled.div`\n  width: 100%;\n  background-color: #f2f2f2;\n  padding: 0.5rem;\n  text-align: center;\n  font-size: 0.8rem;\n`\n\nconst Title = styled.h5`\n  font-weight: bold;\n  color: #000;\n  margin: 0 0 0.5rem 0;\n  font-size: 0.7rem;\n`\n\nconst Description = styled.span`\n  margin-left: 1rem;\n  font-size: 0.7rem;\n`\n\nconst Notice = ({ emoji, title, description }) => (\n  <NoticeWrapper>\n    <Title>\n      <span role=\"img\" aria-label=\"{title}\">\n        {emoji}\n      </span>\n      {title}\n    </Title>\n    <Description>{description}</Description>\n  </NoticeWrapper>\n)\n\nNotice.propTypes = {\n  emoji: PropTypes.string,\n  title: PropTypes.string,\n  description: PropTypes.string,\n}\n\nNotice.defaultProps = {\n  emoji: `📣`,\n  siteTitle: ``,\n  description: ``,\n}\n\nexport default Notice\n","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport styled from \"styled-components\"\nimport PropTypes from \"prop-types\"\nimport SiteMenu from \"./site-menu\"\nimport Notice from \"./notice\"\n\nconst HeaderWrapper = styled.header`\n  background-color: #202c6a;\n`\n\nconst SiteInfo = styled.div`\n  margin: 0 auto;\n  max-width: 960px;\n  padding: 2.5rem;\n  text-align: center;\n`\n\nconst SiteTitle = styled.h1`\n  display: inline-block;\n  margin: 0 0 0.8rem 0;\n  & a {\n    color: white;\n  }\n  & a:hover {\n    color: #ffcc06;\n  }\n`\n\nconst SiteDescription = styled.p`\n  color: #f2f2f2;\n  margin: 0;\n  font-size: 0.8rem;\n`\n\nconst Header = ({ siteTitle, description }) => (\n  <HeaderWrapper>\n    <SiteInfo>\n      <SiteTitle>\n        <Link to=\"/\">{siteTitle}</Link>\n      </SiteTitle>\n      <SiteDescription>{description}</SiteDescription>\n    </SiteInfo>\n    <SiteMenu />\n    <Notice\n      emoji=\"🚧\"\n      title=\"사이트 공사 중\"\n      description=\"일부 기능이 제대로 동작하지 않을 수 있습니다.\"\n    />\n  </HeaderWrapper>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n  description: PropTypes.string,\n  social: PropTypes.array,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n  description: ``,\n  social: [],\n}\n\nexport default Header\n","import React from \"react\"\nimport styled from \"styled-components\"\nimport PropTypes from \"prop-types\"\n\nconst ContentWrapper = styled.footer`\n  border-top: 1px solid #EFEAF4;\n  padding-top: 0.5rem;\n  padding-bottom: 1rem;\n  text-align: center;\n  font-size: 0.8rem;\n`\n\nconst Footer = ({ author }) => (\n  <ContentWrapper>\n    © 2014-{new Date().getFullYear()} <b>{author}</b>. All rights reserved.\n    Built with\n    {` `}\n    <b>\n      <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n    </b>.\n  </ContentWrapper>\n)\n\nFooter.propTypes = {\n  author: PropTypes.string,\n}\n\nFooter.defaultProps = {\n  author: ``,\n}\n\nexport default Footer\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport Header from \"./header\"\nimport Footer from \"./footer\"\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          author\n          title\n          description\n          social {\n            name\n            url\n          }\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <Header\n        siteTitle={data.site.siteMetadata.title}\n        description={data.site.siteMetadata.description}\n        social={data.site.siteMetadata.social}\n      />\n      <div\n        style={{\n          margin: `0 auto`,\n          maxWidth: 960,\n          padding: `0px 1rem 1.45rem 1rem`,\n          paddingTop: 0,\n        }}\n      >\n        <main\n          style={{\n            minHeight: 400,\n          }}\n        >\n          {children}\n        </main>\n      </div>\n      <Footer author={data.site.siteMetadata.author} />\n    </>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}