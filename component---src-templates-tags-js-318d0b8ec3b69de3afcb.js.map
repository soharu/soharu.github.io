{"version":3,"sources":["webpack:///./src/templates/tags.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/site-menu.js","webpack:///./src/components/notice.js","webpack:///./src/components/header.js","webpack:///./src/components/footer.js","webpack:///./src/components/layout.js"],"names":["__webpack_require__","r","__webpack_exports__","d","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby__WEBPACK_IMPORTED_MODULE_1__","_components_layout__WEBPACK_IMPORTED_MODULE_2__","_components_seo__WEBPACK_IMPORTED_MODULE_3__","Tags","_ref","pageContext","data","tag","_data$allMarkdownRema","allMarkdownRemark","edges","totalCount","title","tagHeader","a","createElement","map","_ref2","node","slug","fields","frontmatter","key","to","m","module","exports","require","default","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","loader","enqueue","React","createContext","ProdPageRenderer","location","pageResources","InternalPageRenderer","Object","assign","json","SEO","description","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","name","content","property","concat","defaultProps","ContentWrapper","styled","div","withConfig","displayName","componentId","List","ul","InlineListItem","li","ListItem","props","react_default","href","children","SiteMenu","site_menu_ListItem","NoticeWrapper","Title","h5","Description","span","Notice","emoji","role","aria-label","siteTitle","HeaderWrapper","header","SiteInfo","SiteTitle","h1","SiteDescription","p","Header","gatsby_browser_entry","site_menu","notice","social","footer","Footer","author","footer_ContentWrapper","Date","getFullYear","Layout","_2457312135","Fragment","style","margin","maxWidth","padding","paddingTop","minHeight"],"mappings":"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","file":"component---src-templates-tags-js-318d0b8ec3b69de3afcb.js","sourcesContent":["import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nconst Tags = ({ pageContext, data }) => {\n  const { tag } = pageContext\n  const { edges, totalCount } = data.allMarkdownRemark\n  const title = `Posts tagged with \"${tag}\"`\n  const tagHeader = `${totalCount} post${\n    totalCount === 1 ? \"\" : \"s\"\n  } tagged with \"${tag}\"`\n\n  return (\n    <Layout>\n      <SEO title={title} />\n      <h2>{tagHeader}</h2>\n      <ul>\n        {edges.map(({ node }) => {\n          const { slug } = node.fields\n          const { title } = node.frontmatter\n          return (\n            <li key={slug}>\n              <Link to={slug}>{title}</Link>\n            </li>\n          )\n        })}\n      </ul>\n      <Link to=\"/tags\">All tags</Link>\n    </Layout>\n  )\n}\n\nTags.propTypes = {\n  pageContext: PropTypes.shape({\n    tag: PropTypes.string.isRequired,\n  }),\n  data: PropTypes.shape({\n    allMarkdownRemark: PropTypes.shape({\n      totalCount: PropTypes.number.isRequired,\n      edges: PropTypes.arrayOf(\n        PropTypes.shape({\n          node: PropTypes.shape({\n            frontmatter: PropTypes.shape({\n              title: PropTypes.string.isRequired,\n            }),\n            fields: PropTypes.shape({\n              slug: PropTypes.string.isRequired,\n            }),\n          }),\n        }).isRequired\n      ),\n    }),\n  }),\n}\n\nexport default Tags\n\nexport const pageQuery = graphql`\n  query($tag: String) {\n    allMarkdownRemark(\n      limit: 2000\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { tags: { in: [$tag] } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n          }\n        }\n      }\n    }\n  }\n`\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nexport default SEO\n","import React from \"react\"\nimport styled from \"styled-components\"\n\nconst ContentWrapper = styled.div`\n  width: 100%;\n  background-color: #ffcc06;\n  padding: 0.5rem;\n  text-align: center;\n`\n\nconst List = styled.ul`\n  liststyle: none;\n  margin: 0;\n`\n\nconst InlineListItem = styled.li`\n  display: inline-block;\n  margin-bottom: 0;\n  margin-left: 0.8rem;\n  &:first-child {\n    margin-left: 0rem;\n  }\n  & a {\n    color: white;\n  }\n  & a:hover {\n    color: #202c6a;\n  }\n`\n\nconst ListItem = props => (\n  <InlineListItem>\n    <a href={props.to}>{props.children}</a>\n  </InlineListItem>\n)\n\nconst SiteMenu = () => (\n  <ContentWrapper>\n    <List>\n      <ListItem to=\"/\">Home</ListItem>\n      <ListItem to=\"/about/\">About</ListItem>\n      <ListItem to=\"/posts/\">Posts</ListItem>\n      <ListItem to=\"/tags/\">Tags</ListItem>\n    </List>\n  </ContentWrapper>\n)\n\nexport default SiteMenu\n","import React from \"react\"\nimport styled from \"styled-components\"\nimport PropTypes from \"prop-types\"\n\nconst NoticeWrapper = styled.div`\n  width: 100%;\n  background-color: #f2f2f2;\n  padding: 0.5rem;\n  text-align: center;\n  font-size: 0.8rem;\n`\n\nconst Title = styled.h5`\n  font-weight: bold;\n  color: #000;\n  margin: 0 0 0.5rem 0;\n  font-size: 0.7rem;\n`\n\nconst Description = styled.span`\n  margin-left: 1rem;\n  font-size: 0.7rem;\n`\n\nconst Notice = ({ emoji, title, description }) => (\n  <NoticeWrapper>\n    <Title>\n      <span role=\"img\" aria-label=\"{title}\">\n        {emoji}\n      </span>\n      {title}\n    </Title>\n    <Description>{description}</Description>\n  </NoticeWrapper>\n)\n\nNotice.propTypes = {\n  emoji: PropTypes.string,\n  title: PropTypes.string,\n  description: PropTypes.string,\n}\n\nNotice.defaultProps = {\n  emoji: `📣`,\n  siteTitle: ``,\n  description: ``,\n}\n\nexport default Notice\n","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport styled from \"styled-components\"\nimport PropTypes from \"prop-types\"\nimport SiteMenu from \"./site-menu\"\nimport Notice from \"./notice\"\n\nconst HeaderWrapper = styled.header`\n  background-color: #202c6a;\n`\n\nconst SiteInfo = styled.div`\n  margin: 0 auto;\n  max-width: 960px;\n  padding: 2.5rem;\n  text-align: center;\n`\n\nconst SiteTitle = styled.h1`\n  display: inline-block;\n  margin: 0 0 0.8rem 0;\n  & a {\n    color: white;\n  }\n  & a:hover {\n    color: #ffcc06;\n  }\n`\n\nconst SiteDescription = styled.p`\n  color: #f2f2f2;\n  margin: 0;\n  font-size: 0.8rem;\n`\n\nconst Header = ({ siteTitle, description }) => (\n  <HeaderWrapper>\n    <SiteInfo>\n      <SiteTitle>\n        <Link to=\"/\">{siteTitle}</Link>\n      </SiteTitle>\n      <SiteDescription>{description}</SiteDescription>\n    </SiteInfo>\n    <SiteMenu />\n    <Notice\n      emoji=\"🚧\"\n      title=\"사이트 공사 중\"\n      description=\"일부 기능이 제대로 동작하지 않을 수 있습니다.\"\n    />\n  </HeaderWrapper>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n  description: PropTypes.string,\n  social: PropTypes.array,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n  description: ``,\n  social: [],\n}\n\nexport default Header\n","import React from \"react\"\nimport styled from \"styled-components\"\nimport PropTypes from \"prop-types\"\n\nconst ContentWrapper = styled.footer`\n  border-top: 1px solid #EFEAF4;\n  padding-top: 0.5rem;\n  padding-bottom: 1rem;\n  text-align: center;\n  font-size: 0.8rem;\n`\n\nconst Footer = ({ author }) => (\n  <ContentWrapper>\n    © 2014-{new Date().getFullYear()} <b>{author}</b>. All rights reserved.\n    Built with\n    {` `}\n    <b>\n      <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n    </b>.\n  </ContentWrapper>\n)\n\nFooter.propTypes = {\n  author: PropTypes.string,\n}\n\nFooter.defaultProps = {\n  author: ``,\n}\n\nexport default Footer\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport Header from \"./header\"\nimport Footer from \"./footer\"\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          author\n          title\n          description\n          social {\n            name\n            url\n          }\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <Header\n        siteTitle={data.site.siteMetadata.title}\n        description={data.site.siteMetadata.description}\n        social={data.site.siteMetadata.social}\n      />\n      <div\n        style={{\n          margin: `0 auto`,\n          maxWidth: 960,\n          padding: `0px 1rem 1.45rem 1rem`,\n          paddingTop: 0,\n        }}\n      >\n        <main\n          style={{\n            minHeight: 400,\n          }}\n        >\n          {children}\n        </main>\n      </div>\n      <Footer author={data.site.siteMetadata.author} />\n    </>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}